// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.12
// source: api/graph/v1/graph_tree.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *IdReq) Reset() {
	*x = IdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_graph_v1_graph_tree_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdReq) ProtoMessage() {}

func (x *IdReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_graph_v1_graph_tree_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdReq.ProtoReflect.Descriptor instead.
func (*IdReq) Descriptor() ([]byte, []int) {
	return file_api_graph_v1_graph_tree_proto_rawDescGZIP(), []int{0}
}

func (x *IdReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type PgIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum  uint32 `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
	PageSize uint32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Id       string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PgIdReq) Reset() {
	*x = PgIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_graph_v1_graph_tree_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PgIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PgIdReq) ProtoMessage() {}

func (x *PgIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_graph_v1_graph_tree_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PgIdReq.ProtoReflect.Descriptor instead.
func (*PgIdReq) Descriptor() ([]byte, []int) {
	return file_api_graph_v1_graph_tree_proto_rawDescGZIP(), []int{1}
}

func (x *PgIdReq) GetPageNum() uint32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *PgIdReq) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *PgIdReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type TreeNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityId      string      `protobuf:"bytes,1,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	Id            string      `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Title         string      `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Labels        []string    `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty"`
	ChildrenCount int32       `protobuf:"varint,5,opt,name=children_count,json=childrenCount,proto3" json:"children_count,omitempty"`
	Children      []*TreeNode `protobuf:"bytes,6,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *TreeNode) Reset() {
	*x = TreeNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_graph_v1_graph_tree_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TreeNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreeNode) ProtoMessage() {}

func (x *TreeNode) ProtoReflect() protoreflect.Message {
	mi := &file_api_graph_v1_graph_tree_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreeNode.ProtoReflect.Descriptor instead.
func (*TreeNode) Descriptor() ([]byte, []int) {
	return file_api_graph_v1_graph_tree_proto_rawDescGZIP(), []int{2}
}

func (x *TreeNode) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

func (x *TreeNode) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TreeNode) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TreeNode) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *TreeNode) GetChildrenCount() int32 {
	if x != nil {
		return x.ChildrenCount
	}
	return 0
}

func (x *TreeNode) GetChildren() []*TreeNode {
	if x != nil {
		return x.Children
	}
	return nil
}

type TreeNodeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool      `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Code    int32     `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Msg     string    `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	Data    *TreeNode `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TreeNodeResp) Reset() {
	*x = TreeNodeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_graph_v1_graph_tree_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TreeNodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreeNodeResp) ProtoMessage() {}

func (x *TreeNodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_graph_v1_graph_tree_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreeNodeResp.ProtoReflect.Descriptor instead.
func (*TreeNodeResp) Descriptor() ([]byte, []int) {
	return file_api_graph_v1_graph_tree_proto_rawDescGZIP(), []int{3}
}

func (x *TreeNodeResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *TreeNodeResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *TreeNodeResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *TreeNodeResp) GetData() *TreeNode {
	if x != nil {
		return x.Data
	}
	return nil
}

type TreeNodesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success  bool        `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Code     int32       `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Msg      string      `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	Total    uint32      `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	Current  uint32      `protobuf:"varint,5,opt,name=current,proto3" json:"current,omitempty"`
	PageSize uint32      `protobuf:"varint,6,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Data     []*TreeNode `protobuf:"bytes,7,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *TreeNodesResp) Reset() {
	*x = TreeNodesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_graph_v1_graph_tree_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TreeNodesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreeNodesResp) ProtoMessage() {}

func (x *TreeNodesResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_graph_v1_graph_tree_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreeNodesResp.ProtoReflect.Descriptor instead.
func (*TreeNodesResp) Descriptor() ([]byte, []int) {
	return file_api_graph_v1_graph_tree_proto_rawDescGZIP(), []int{4}
}

func (x *TreeNodesResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *TreeNodesResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *TreeNodesResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *TreeNodesResp) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *TreeNodesResp) GetCurrent() uint32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *TreeNodesResp) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *TreeNodesResp) GetData() []*TreeNode {
	if x != nil {
		return x.Data
	}
	return nil
}

type TitleAutoCompleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum    uint32 `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
	PageSize   uint32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	KeyWord    string `protobuf:"bytes,3,opt,name=key_word,json=keyWord,proto3" json:"key_word,omitempty"`
	LimitLabel string `protobuf:"bytes,4,opt,name=limit_label,json=limitLabel,proto3" json:"limit_label,omitempty"`
}

func (x *TitleAutoCompleteReq) Reset() {
	*x = TitleAutoCompleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_graph_v1_graph_tree_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TitleAutoCompleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TitleAutoCompleteReq) ProtoMessage() {}

func (x *TitleAutoCompleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_graph_v1_graph_tree_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TitleAutoCompleteReq.ProtoReflect.Descriptor instead.
func (*TitleAutoCompleteReq) Descriptor() ([]byte, []int) {
	return file_api_graph_v1_graph_tree_proto_rawDescGZIP(), []int{5}
}

func (x *TitleAutoCompleteReq) GetPageNum() uint32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *TitleAutoCompleteReq) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *TitleAutoCompleteReq) GetKeyWord() string {
	if x != nil {
		return x.KeyWord
	}
	return ""
}

func (x *TitleAutoCompleteReq) GetLimitLabel() string {
	if x != nil {
		return x.LimitLabel
	}
	return ""
}

type TitleAutoComplete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Id    string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TitleAutoComplete) Reset() {
	*x = TitleAutoComplete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_graph_v1_graph_tree_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TitleAutoComplete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TitleAutoComplete) ProtoMessage() {}

func (x *TitleAutoComplete) ProtoReflect() protoreflect.Message {
	mi := &file_api_graph_v1_graph_tree_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TitleAutoComplete.ProtoReflect.Descriptor instead.
func (*TitleAutoComplete) Descriptor() ([]byte, []int) {
	return file_api_graph_v1_graph_tree_proto_rawDescGZIP(), []int{6}
}

func (x *TitleAutoComplete) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TitleAutoComplete) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type TitleAutoCompleteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success  bool                 `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Code     int32                `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Msg      string               `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	Total    uint32               `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	Current  uint32               `protobuf:"varint,5,opt,name=current,proto3" json:"current,omitempty"`
	PageSize uint32               `protobuf:"varint,6,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Data     []*TitleAutoComplete `protobuf:"bytes,7,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *TitleAutoCompleteResp) Reset() {
	*x = TitleAutoCompleteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_graph_v1_graph_tree_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TitleAutoCompleteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TitleAutoCompleteResp) ProtoMessage() {}

func (x *TitleAutoCompleteResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_graph_v1_graph_tree_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TitleAutoCompleteResp.ProtoReflect.Descriptor instead.
func (*TitleAutoCompleteResp) Descriptor() ([]byte, []int) {
	return file_api_graph_v1_graph_tree_proto_rawDescGZIP(), []int{7}
}

func (x *TitleAutoCompleteResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *TitleAutoCompleteResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *TitleAutoCompleteResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *TitleAutoCompleteResp) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *TitleAutoCompleteResp) GetCurrent() uint32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *TitleAutoCompleteResp) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *TitleAutoCompleteResp) GetData() []*TitleAutoComplete {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetPathReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceId string `protobuf:"bytes,1,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	TargetId string `protobuf:"bytes,2,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
}

func (x *GetPathReq) Reset() {
	*x = GetPathReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_graph_v1_graph_tree_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPathReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPathReq) ProtoMessage() {}

func (x *GetPathReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_graph_v1_graph_tree_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPathReq.ProtoReflect.Descriptor instead.
func (*GetPathReq) Descriptor() ([]byte, []int) {
	return file_api_graph_v1_graph_tree_proto_rawDescGZIP(), []int{8}
}

func (x *GetPathReq) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

func (x *GetPathReq) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

var File_api_graph_v1_graph_tree_proto protoreflect.FileDescriptor

var file_api_graph_v1_graph_tree_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2f, 0x76, 0x31, 0x2f, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x5f, 0x74, 0x72, 0x65, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0c, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x17, 0x0a, 0x05, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x51, 0x0a, 0x07, 0x50, 0x67, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xc0, 0x01, 0x0a, 0x08, 0x54, 0x72, 0x65, 0x65, 0x4e, 0x6f,
	0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x25, 0x0a,
	0x0e, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x65, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x08,
	0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0x7a, 0x0a, 0x0c, 0x54, 0x72, 0x65, 0x65,
	0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x65, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0xc8, 0x01, 0x0a, 0x0d, 0x54, 0x72, 0x65, 0x65, 0x4e, 0x6f, 0x64,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x72, 0x65, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x8a, 0x01, 0x0a, 0x14, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65,
	0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x57, 0x6f, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x39, 0x0a, 0x11,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xd9, 0x01, 0x0a, 0x15, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x41, 0x75, 0x74, 0x6f, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x33,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x41, 0x75, 0x74, 0x6f, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x46, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65,
	0x71, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x32, 0xe1, 0x03, 0x0a, 0x10,
	0x54, 0x72, 0x65, 0x65, 0x47, 0x72, 0x61, 0x70, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x62, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x54, 0x72, 0x65, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12,
	0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x65, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x12, 0x1a, 0x2f, 0x6d, 0x69, 0x63, 0x72, 0x6f,
	0x73, 0x2f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x72, 0x65, 0x65, 0x2f,
	0x6e, 0x6f, 0x64, 0x65, 0x12, 0x69, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x43, 0x68, 0x69, 0x6c, 0x64,
	0x72, 0x65, 0x6e, 0x12, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x67, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x65, 0x65, 0x4e, 0x6f,
	0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x12,
	0x1e, 0x2f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x2f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2f, 0x76,
	0x31, 0x2f, 0x74, 0x72, 0x65, 0x65, 0x2f, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x12,
	0x91, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x6f,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x41, 0x75, 0x74,
	0x6f, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x41, 0x75, 0x74, 0x6f, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x12, 0x28, 0x2f, 0x6d, 0x69, 0x63, 0x72,
	0x6f, 0x73, 0x2f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x72, 0x65, 0x65,
	0x2f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x2d, 0x61, 0x75, 0x74, 0x6f, 0x63, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x12, 0x6a, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x68, 0x42, 0x65,
	0x74, 0x77, 0x65, 0x65, 0x6e, 0x12, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x1a,
	0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x72, 0x65, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x22, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1c, 0x12, 0x1a, 0x2f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x2f, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x72, 0x65, 0x65, 0x2f, 0x70, 0x61, 0x74, 0x68, 0x42,
	0x39, 0x0a, 0x0c, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x76, 0x31, 0x42,
	0x07, 0x47, 0x72, 0x61, 0x70, 0x68, 0x56, 0x31, 0x50, 0x01, 0x5a, 0x1e, 0x62, 0x72, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x6b, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_api_graph_v1_graph_tree_proto_rawDescOnce sync.Once
	file_api_graph_v1_graph_tree_proto_rawDescData = file_api_graph_v1_graph_tree_proto_rawDesc
)

func file_api_graph_v1_graph_tree_proto_rawDescGZIP() []byte {
	file_api_graph_v1_graph_tree_proto_rawDescOnce.Do(func() {
		file_api_graph_v1_graph_tree_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_graph_v1_graph_tree_proto_rawDescData)
	})
	return file_api_graph_v1_graph_tree_proto_rawDescData
}

var file_api_graph_v1_graph_tree_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_api_graph_v1_graph_tree_proto_goTypes = []interface{}{
	(*IdReq)(nil),                 // 0: api.graph.v1.IdReq
	(*PgIdReq)(nil),               // 1: api.graph.v1.PgIdReq
	(*TreeNode)(nil),              // 2: api.graph.v1.TreeNode
	(*TreeNodeResp)(nil),          // 3: api.graph.v1.TreeNodeResp
	(*TreeNodesResp)(nil),         // 4: api.graph.v1.TreeNodesResp
	(*TitleAutoCompleteReq)(nil),  // 5: api.graph.v1.TitleAutoCompleteReq
	(*TitleAutoComplete)(nil),     // 6: api.graph.v1.TitleAutoComplete
	(*TitleAutoCompleteResp)(nil), // 7: api.graph.v1.TitleAutoCompleteResp
	(*GetPathReq)(nil),            // 8: api.graph.v1.GetPathReq
}
var file_api_graph_v1_graph_tree_proto_depIdxs = []int32{
	2, // 0: api.graph.v1.TreeNode.children:type_name -> api.graph.v1.TreeNode
	2, // 1: api.graph.v1.TreeNodeResp.data:type_name -> api.graph.v1.TreeNode
	2, // 2: api.graph.v1.TreeNodesResp.data:type_name -> api.graph.v1.TreeNode
	6, // 3: api.graph.v1.TitleAutoCompleteResp.data:type_name -> api.graph.v1.TitleAutoComplete
	0, // 4: api.graph.v1.TreeGraphService.GetTreeNode:input_type -> api.graph.v1.IdReq
	1, // 5: api.graph.v1.TreeGraphService.GetChildren:input_type -> api.graph.v1.PgIdReq
	5, // 6: api.graph.v1.TreeGraphService.GetTitleAutoComplete:input_type -> api.graph.v1.TitleAutoCompleteReq
	8, // 7: api.graph.v1.TreeGraphService.GetPathBetween:input_type -> api.graph.v1.GetPathReq
	3, // 8: api.graph.v1.TreeGraphService.GetTreeNode:output_type -> api.graph.v1.TreeNodeResp
	4, // 9: api.graph.v1.TreeGraphService.GetChildren:output_type -> api.graph.v1.TreeNodesResp
	7, // 10: api.graph.v1.TreeGraphService.GetTitleAutoComplete:output_type -> api.graph.v1.TitleAutoCompleteResp
	3, // 11: api.graph.v1.TreeGraphService.GetPathBetween:output_type -> api.graph.v1.TreeNodeResp
	8, // [8:12] is the sub-list for method output_type
	4, // [4:8] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_api_graph_v1_graph_tree_proto_init() }
func file_api_graph_v1_graph_tree_proto_init() {
	if File_api_graph_v1_graph_tree_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_graph_v1_graph_tree_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_graph_v1_graph_tree_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PgIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_graph_v1_graph_tree_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TreeNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_graph_v1_graph_tree_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TreeNodeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_graph_v1_graph_tree_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TreeNodesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_graph_v1_graph_tree_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TitleAutoCompleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_graph_v1_graph_tree_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TitleAutoComplete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_graph_v1_graph_tree_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TitleAutoCompleteResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_graph_v1_graph_tree_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPathReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_graph_v1_graph_tree_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_graph_v1_graph_tree_proto_goTypes,
		DependencyIndexes: file_api_graph_v1_graph_tree_proto_depIdxs,
		MessageInfos:      file_api_graph_v1_graph_tree_proto_msgTypes,
	}.Build()
	File_api_graph_v1_graph_tree_proto = out.File
	file_api_graph_v1_graph_tree_proto_rawDesc = nil
	file_api_graph_v1_graph_tree_proto_goTypes = nil
	file_api_graph_v1_graph_tree_proto_depIdxs = nil
}
