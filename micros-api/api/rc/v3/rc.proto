syntax = "proto3";

package api.rc.v3;

import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

option go_package = "micros-api/api/rc/v3;v3";
option java_multiple_files = true;
option java_outer_classname = "RcV3";
option java_package = "api.rc.v3";


service RcService {
  rpc InsertReportDecisionFactor(InsertReportDecisionFactorReq) returns (InsertReportDecisionFactorResp) {
    option (google.api.http) = {
      post: "/micros/rc/v3/report/decision-factor"
      body: "*"
    };
  }

  rpc UpdateReportDecisionFactor(UpdateReportDecisionFactorReq) returns (InsertReportDecisionFactorResp) {
    option (google.api.http) = {
      post: "/micros/rc/v3/report/decision-factor/update"
      body: "*"
    };
  }

  rpc GetReportDecisionFactor(GetDecisionFactorReq) returns (GetDecisionFactorResp) {
    option (google.api.http) = {
      get: "/micros/rc/v3/report/decision-factor"
    };
  }

  rpc ListReport(ListReportKwdSearchReq) returns (ListReportResp) {
    option (google.api.http) = {
      get: "/micros/rc/v3/report/list"
    };
  }

  rpc ListCompanies(ListReportKwdSearchReq) returns (ListCompaniesResp) {
    option (google.api.http) = {
      get: "/micros/rc/v3/report/companies"
    };
  }

  rpc ListCompaniesWaiting(ListCompanyWaitingReq) returns (ListCompaniesWaitingResp) {
    option (google.api.http) = {
      get: "/micros/rc/v3/report/companies/waiting"
    };
  }

  rpc ListReportByUscId(ListReportByUscIdReq) returns (ListReportByUscIdResp) {
    option (google.api.http) = {
      get: "/micros/rc/v3/report/companies/list"
    };
  }


  rpc GetReportContent(GetReportContentReq) returns (GetReportContentResp) {
    option (google.api.http) = {
      get: "/micros/rc/v3/report/content"
    };
  }

  rpc UpdateReportContentSnapshot(UpdateReportContentSnapshotReq) returns (UpdateReportContentSnapshotResp) {
    option (google.api.http) = {
      post: "/micros/rc/v3/report/content/snapshot/update"
      body: "*"
    };
  }

  rpc GetReportDataValidationStats(GetReportDataValidationStatsReq) returns (GetReportDataValidationStatsResp) {
    option (google.api.http) = {
      get: "/micros/rc/v3/report/validate"
    };
  }

  rpc GetAhpResult(GetAhpResultReq) returns (GetAhpResultResp) {
    option (google.api.http) = {
      get: "/micros/rc/v3/report/ahp"
    };
  }


  rpc GetTradeDetail(GetTradeDetailReq) returns (GetTradeDetailResp) {
    option (google.api.http) = {
      get: "/micros/rc/v3/report/trade_detail"
    };
  }

  rpc GetReportPrintConfig(google.protobuf.Empty) returns (GetReportPrintConfigResp) {
    option (google.api.http) = {
      get: "/micros/rc/v3/report/print_config"
    };
  }

  rpc UpdateReportPrintConfig(SaveReportPrintConfigReq) returns (SaveReportPrintConfigResp) {
    option (google.api.http) = {
      post: "/micros/rc/v3/report/print_config/update"
      body: "*"
    };
  }
}

message SaveReportPrintConfigReq {
  google.protobuf.Struct config = 1;
}

message SaveReportPrintConfigResp {
  bool success = 1;
  int32 code = 2;
  string msg = 3;
}

message GetReportPrintConfigResp {
  bool success = 1;
  int32 code = 2;
  string msg = 3;
  google.protobuf.Struct config = 4;
}

message UpdateReportContentSnapshotReq {
  int64 content_id = 1;
  ReportVersion report_version = 2;
}

message UpdateReportContentSnapshotResp {
  bool success = 1;
  int32 code = 2;
  string msg = 3;
}

message GetTradeDetailReq {
  enum TimePeriodOption {
    PERIOD_1ST = 0;
    PERIOD_2ND = 1;
    PERIOD_3RD = 2;
    PERIOD_4TH = 3;
  }
  enum TradeFrequencyOption {
    FREQUENCY_LOW = 0;
    FREQUENCY_MID = 1;
    FREQUENCY_HIGH = 2;
  }
  enum TopCusOption {
    TOP_1 = 0;
    TOP_5 = 1;
    TOP_10 = 2;
    TOP_20 = 3;
    ALL = 4;
  }
  enum TradeType {
    CUSTOMER = 0;
    SUPPLIER = 1;
  }

  int64 content_id = 1;
  ReportVersion report_version = 2;
  repeated TimePeriodOption option_time_period = 3;
  TopCusOption option_top_cus = 4;
  repeated TradeFrequencyOption option_trade_frequency = 5;
  TradeType trade_type = 6;
}

message GetTradeDetailResp {
  bool success = 1;
  int32 code = 2;
  string msg = 3;
  google.protobuf.Struct data = 4;
}


message GetAhpResultReq {
  int64 claim_id = 1;
}

message GetAhpResultResp {
  bool success = 1;
  int32 code = 2;
  string msg = 3;
  google.protobuf.Struct data = 4;
}

message GetDecisionFactorReq {
  int64 content_id = 1;
}

message GetDecisionFactorResp {
  message DecisionFactorData {
    string usc_id = 1;
    int32 lh_qylx = 2;
    int32 lh_cylwz = 3;
    int32 lh_gdct = 4;
    //	int32 lh_qybq = 5;
    int32 lh_yhsx = 5;
    int32 lh_sfsx = 6;
    string created_at = 7;
    int64 created_by = 8;
    int64 claim_id = 9;
  }
  bool success = 1;
  int32 code = 2;
  string msg = 3;
  DecisionFactorData data = 4;
}


message InsertReportDecisionFactorResp {
  bool success = 1;
  int32 code = 2;
  string msg = 3;
}

message InsertReportDecisionFactorReq{
  string usc_id = 1;
  int32 lh_qylx = 2;
  int32 lh_cylwz = 3;
  int32 lh_gdct = 4;
  //	int32 lh_qybq = 5;
  int32 lh_yhsx = 5;
  int32 lh_sfsx = 6;
}

message UpdateReportDecisionFactorReq{
  int64 claim_id = 1;
  int32 lh_qylx = 2;
  int32 lh_cylwz = 3;
  int32 lh_gdct = 4;
  //	int32 lh_qybq = 5;
  int32 lh_yhsx = 5;
  int32 lh_sfsx = 6;
}

message UpdateDependencyDataReq{
  int64 id = 1;
  int32 lh_qylx = 3;
  int32 lh_cylwz = 4;
  int32 lh_gdct = 5;
  //	int32 lh_qybq = 6;
  int32 lh_yhsx = 6;
  int32 lh_sfsx = 7;
  string addition_data = 8;
}

message ListCompaniesWaitingResp {
  message CompaniesWaiting {
    // 企业名称
    string usc_id = 1;
    // 企业统一信用社会代码
    string created_at = 2;
    string id = 3;
  }
  bool success = 1;
  int32 code = 2;
  string msg = 3;
  uint32 total = 4;
  repeated CompaniesWaiting data = 5;
}


message ListCompaniesResp {
  message CompanyInfo {
    // 企业名称
    string enterprise_name = 1;
    // 企业统一信用社会代码
    string usc_id = 2;
    string last_update = 3;
    string id =4;
  }
  bool success = 1;
  int32 code = 2;
  string msg = 3;
  uint32 total = 4;
  repeated CompanyInfo data = 5;
}

message ListReportResp {
  message ReportInfo {
    // 报告id
    int64 content_id = 1;
    // 企业名称
    string enterprise_name = 2;
    // 企业统一信用社会代码
    string usc_id = 3;
    // 报文更新月份
    string data_collect_month = 4;
    // 报告是否可用
    bool available = 5;
    // 报告生成时间 yyyy-MM-dd HH:mm:ss
    string content_updated_time = 6;
    // 报告状态码
    // rc_dependency_data.id
  }
  bool success = 1;
  int32 code = 2;
  string msg = 3;
  uint32 total = 4;
  uint32 offset = 5;
  repeated ReportInfo data = 6;
}

message ListReportByUscIdResp {
  message ReportInfo {
    int64 content_id = 1;
    string data_collect_month = 4;
    bool available = 5;
    string content_updated_time = 6;
    string id = 7;
    int32 status = 8;
    string create_by = 9;
  }
  bool success = 1;
  int32 code = 2;
  string msg = 3;
  uint32 total = 4;
  repeated ReportInfo data = 6;
}

enum ReportVersion {
  V2 = 0;
  V2_5 = 1;
  V3 = 2;
  Latest = 3;
}

message ListCompanyWaitingReq {
  ReportVersion version = 1;
  string uscid_kwd = 2;
  uint32 page_size = 3;
  uint32 page_num = 4;
}

message ListReportKwdSearchReq {
  ReportVersion version = 1;
  string name_kwd = 2;
  uint32 page_size = 3;
  uint32 page_num = 4;
}

message ListReportByUscIdReq {
  ReportVersion version = 1;
  string usc_id = 2;
  uint32 page_size = 3;
  uint32 page_num = 4;
}


message GetReportContentReq {
  int64 content_id = 1;
  ReportVersion version = 2;
  bool realtime = 3;
}


message GetReportContentResp {
  // 报告内容
  bool success = 1;
  int32 code = 2;
  string msg = 3;
  google.protobuf.Struct data = 4;
}

message GetReportDataValidationStatsReq {
  int64 content_id = 1;
  ReportVersion version = 2;
}

message GetReportDataValidationStatsResp {
  bool success = 1;
  int32 code = 2;
  string msg = 3;
  repeated google.protobuf.Struct data = 4;
}


//message ReportContentByDepIdReq {
//  int64 dep_id = 1;
//  string lang = 2;
//}
//
//message ReportDownloadReq {
//  int64 dep_id = 1;
//  string lang = 2;
//  string file_name = 3;
//}
//
//
//message RefreshReportContentReq {
//  int64 contentId = 1;
//}
//
//message RefreshReportContentResp {
//  bool success = 1;
//  string msg_pub_time = 2;
//  string msg = 3;
//}
//
//message OssFileDownloadResp {
//  bool available = 1;
//  string msg = 2;
//  string url = 3;
//  string created_at = 4;
//}

