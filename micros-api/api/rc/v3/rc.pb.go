// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.20.3
// source: api/rc/v3/rc.proto

package v3

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReportVersion int32

const (
	ReportVersion_V2     ReportVersion = 0
	ReportVersion_V3     ReportVersion = 1
	ReportVersion_Latest ReportVersion = 2
)

// Enum value maps for ReportVersion.
var (
	ReportVersion_name = map[int32]string{
		0: "V2",
		1: "V3",
		2: "Latest",
	}
	ReportVersion_value = map[string]int32{
		"V2":     0,
		"V3":     1,
		"Latest": 2,
	}
)

func (x ReportVersion) Enum() *ReportVersion {
	p := new(ReportVersion)
	*p = x
	return p
}

func (x ReportVersion) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReportVersion) Descriptor() protoreflect.EnumDescriptor {
	return file_api_rc_v3_rc_proto_enumTypes[0].Descriptor()
}

func (ReportVersion) Type() protoreflect.EnumType {
	return &file_api_rc_v3_rc_proto_enumTypes[0]
}

func (x ReportVersion) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReportVersion.Descriptor instead.
func (ReportVersion) EnumDescriptor() ([]byte, []int) {
	return file_api_rc_v3_rc_proto_rawDescGZIP(), []int{0}
}

type GetAhpResultReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClaimId int64 `protobuf:"varint,1,opt,name=claim_id,json=claimId,proto3" json:"claim_id,omitempty"`
}

func (x *GetAhpResultReq) Reset() {
	*x = GetAhpResultReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_rc_v3_rc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAhpResultReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAhpResultReq) ProtoMessage() {}

func (x *GetAhpResultReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_rc_v3_rc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAhpResultReq.ProtoReflect.Descriptor instead.
func (*GetAhpResultReq) Descriptor() ([]byte, []int) {
	return file_api_rc_v3_rc_proto_rawDescGZIP(), []int{0}
}

func (x *GetAhpResultReq) GetClaimId() int64 {
	if x != nil {
		return x.ClaimId
	}
	return 0
}

type GetAhpResultResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool             `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Code    int32            `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Msg     string           `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	Data    *structpb.Struct `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetAhpResultResp) Reset() {
	*x = GetAhpResultResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_rc_v3_rc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAhpResultResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAhpResultResp) ProtoMessage() {}

func (x *GetAhpResultResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_rc_v3_rc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAhpResultResp.ProtoReflect.Descriptor instead.
func (*GetAhpResultResp) Descriptor() ([]byte, []int) {
	return file_api_rc_v3_rc_proto_rawDescGZIP(), []int{1}
}

func (x *GetAhpResultResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetAhpResultResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetAhpResultResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetAhpResultResp) GetData() *structpb.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetDecisionFactorReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContentId int64 `protobuf:"varint,1,opt,name=content_id,json=contentId,proto3" json:"content_id,omitempty"`
}

func (x *GetDecisionFactorReq) Reset() {
	*x = GetDecisionFactorReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_rc_v3_rc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDecisionFactorReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDecisionFactorReq) ProtoMessage() {}

func (x *GetDecisionFactorReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_rc_v3_rc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDecisionFactorReq.ProtoReflect.Descriptor instead.
func (*GetDecisionFactorReq) Descriptor() ([]byte, []int) {
	return file_api_rc_v3_rc_proto_rawDescGZIP(), []int{2}
}

func (x *GetDecisionFactorReq) GetContentId() int64 {
	if x != nil {
		return x.ContentId
	}
	return 0
}

type GetDecisionFactorResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                                      `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Code    int32                                     `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Msg     string                                    `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	Data    *GetDecisionFactorResp_DecisionFactorData `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetDecisionFactorResp) Reset() {
	*x = GetDecisionFactorResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_rc_v3_rc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDecisionFactorResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDecisionFactorResp) ProtoMessage() {}

func (x *GetDecisionFactorResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_rc_v3_rc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDecisionFactorResp.ProtoReflect.Descriptor instead.
func (*GetDecisionFactorResp) Descriptor() ([]byte, []int) {
	return file_api_rc_v3_rc_proto_rawDescGZIP(), []int{3}
}

func (x *GetDecisionFactorResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetDecisionFactorResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetDecisionFactorResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetDecisionFactorResp) GetData() *GetDecisionFactorResp_DecisionFactorData {
	if x != nil {
		return x.Data
	}
	return nil
}

type InsertReportDecisionFactorResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Code    int32  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Msg     string `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *InsertReportDecisionFactorResp) Reset() {
	*x = InsertReportDecisionFactorResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_rc_v3_rc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertReportDecisionFactorResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertReportDecisionFactorResp) ProtoMessage() {}

func (x *InsertReportDecisionFactorResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_rc_v3_rc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertReportDecisionFactorResp.ProtoReflect.Descriptor instead.
func (*InsertReportDecisionFactorResp) Descriptor() ([]byte, []int) {
	return file_api_rc_v3_rc_proto_rawDescGZIP(), []int{4}
}

func (x *InsertReportDecisionFactorResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *InsertReportDecisionFactorResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *InsertReportDecisionFactorResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type InsertReportDecisionFactorReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UscId   string `protobuf:"bytes,1,opt,name=usc_id,json=uscId,proto3" json:"usc_id,omitempty"`
	LhQylx  int32  `protobuf:"varint,2,opt,name=lh_qylx,json=lhQylx,proto3" json:"lh_qylx,omitempty"`
	LhCylwz int32  `protobuf:"varint,3,opt,name=lh_cylwz,json=lhCylwz,proto3" json:"lh_cylwz,omitempty"`
	LhGdct  int32  `protobuf:"varint,4,opt,name=lh_gdct,json=lhGdct,proto3" json:"lh_gdct,omitempty"`
	// int32 lh_qybq = 5;
	LhYhsx int32 `protobuf:"varint,5,opt,name=lh_yhsx,json=lhYhsx,proto3" json:"lh_yhsx,omitempty"`
	LhSfsx int32 `protobuf:"varint,6,opt,name=lh_sfsx,json=lhSfsx,proto3" json:"lh_sfsx,omitempty"`
}

func (x *InsertReportDecisionFactorReq) Reset() {
	*x = InsertReportDecisionFactorReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_rc_v3_rc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertReportDecisionFactorReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertReportDecisionFactorReq) ProtoMessage() {}

func (x *InsertReportDecisionFactorReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_rc_v3_rc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertReportDecisionFactorReq.ProtoReflect.Descriptor instead.
func (*InsertReportDecisionFactorReq) Descriptor() ([]byte, []int) {
	return file_api_rc_v3_rc_proto_rawDescGZIP(), []int{5}
}

func (x *InsertReportDecisionFactorReq) GetUscId() string {
	if x != nil {
		return x.UscId
	}
	return ""
}

func (x *InsertReportDecisionFactorReq) GetLhQylx() int32 {
	if x != nil {
		return x.LhQylx
	}
	return 0
}

func (x *InsertReportDecisionFactorReq) GetLhCylwz() int32 {
	if x != nil {
		return x.LhCylwz
	}
	return 0
}

func (x *InsertReportDecisionFactorReq) GetLhGdct() int32 {
	if x != nil {
		return x.LhGdct
	}
	return 0
}

func (x *InsertReportDecisionFactorReq) GetLhYhsx() int32 {
	if x != nil {
		return x.LhYhsx
	}
	return 0
}

func (x *InsertReportDecisionFactorReq) GetLhSfsx() int32 {
	if x != nil {
		return x.LhSfsx
	}
	return 0
}

type UpdateReportDecisionFactorReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClaimId int64 `protobuf:"varint,1,opt,name=claim_id,json=claimId,proto3" json:"claim_id,omitempty"`
	LhQylx  int32 `protobuf:"varint,2,opt,name=lh_qylx,json=lhQylx,proto3" json:"lh_qylx,omitempty"`
	LhCylwz int32 `protobuf:"varint,3,opt,name=lh_cylwz,json=lhCylwz,proto3" json:"lh_cylwz,omitempty"`
	LhGdct  int32 `protobuf:"varint,4,opt,name=lh_gdct,json=lhGdct,proto3" json:"lh_gdct,omitempty"`
	// int32 lh_qybq = 5;
	LhYhsx int32 `protobuf:"varint,5,opt,name=lh_yhsx,json=lhYhsx,proto3" json:"lh_yhsx,omitempty"`
	LhSfsx int32 `protobuf:"varint,6,opt,name=lh_sfsx,json=lhSfsx,proto3" json:"lh_sfsx,omitempty"`
}

func (x *UpdateReportDecisionFactorReq) Reset() {
	*x = UpdateReportDecisionFactorReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_rc_v3_rc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateReportDecisionFactorReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReportDecisionFactorReq) ProtoMessage() {}

func (x *UpdateReportDecisionFactorReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_rc_v3_rc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReportDecisionFactorReq.ProtoReflect.Descriptor instead.
func (*UpdateReportDecisionFactorReq) Descriptor() ([]byte, []int) {
	return file_api_rc_v3_rc_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateReportDecisionFactorReq) GetClaimId() int64 {
	if x != nil {
		return x.ClaimId
	}
	return 0
}

func (x *UpdateReportDecisionFactorReq) GetLhQylx() int32 {
	if x != nil {
		return x.LhQylx
	}
	return 0
}

func (x *UpdateReportDecisionFactorReq) GetLhCylwz() int32 {
	if x != nil {
		return x.LhCylwz
	}
	return 0
}

func (x *UpdateReportDecisionFactorReq) GetLhGdct() int32 {
	if x != nil {
		return x.LhGdct
	}
	return 0
}

func (x *UpdateReportDecisionFactorReq) GetLhYhsx() int32 {
	if x != nil {
		return x.LhYhsx
	}
	return 0
}

func (x *UpdateReportDecisionFactorReq) GetLhSfsx() int32 {
	if x != nil {
		return x.LhSfsx
	}
	return 0
}

type UpdateDependencyDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	LhQylx  int32 `protobuf:"varint,3,opt,name=lh_qylx,json=lhQylx,proto3" json:"lh_qylx,omitempty"`
	LhCylwz int32 `protobuf:"varint,4,opt,name=lh_cylwz,json=lhCylwz,proto3" json:"lh_cylwz,omitempty"`
	LhGdct  int32 `protobuf:"varint,5,opt,name=lh_gdct,json=lhGdct,proto3" json:"lh_gdct,omitempty"`
	// int32 lh_qybq = 6;
	LhYhsx       int32  `protobuf:"varint,6,opt,name=lh_yhsx,json=lhYhsx,proto3" json:"lh_yhsx,omitempty"`
	LhSfsx       int32  `protobuf:"varint,7,opt,name=lh_sfsx,json=lhSfsx,proto3" json:"lh_sfsx,omitempty"`
	AdditionData string `protobuf:"bytes,8,opt,name=addition_data,json=additionData,proto3" json:"addition_data,omitempty"`
}

func (x *UpdateDependencyDataReq) Reset() {
	*x = UpdateDependencyDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_rc_v3_rc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDependencyDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDependencyDataReq) ProtoMessage() {}

func (x *UpdateDependencyDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_rc_v3_rc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDependencyDataReq.ProtoReflect.Descriptor instead.
func (*UpdateDependencyDataReq) Descriptor() ([]byte, []int) {
	return file_api_rc_v3_rc_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateDependencyDataReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateDependencyDataReq) GetLhQylx() int32 {
	if x != nil {
		return x.LhQylx
	}
	return 0
}

func (x *UpdateDependencyDataReq) GetLhCylwz() int32 {
	if x != nil {
		return x.LhCylwz
	}
	return 0
}

func (x *UpdateDependencyDataReq) GetLhGdct() int32 {
	if x != nil {
		return x.LhGdct
	}
	return 0
}

func (x *UpdateDependencyDataReq) GetLhYhsx() int32 {
	if x != nil {
		return x.LhYhsx
	}
	return 0
}

func (x *UpdateDependencyDataReq) GetLhSfsx() int32 {
	if x != nil {
		return x.LhSfsx
	}
	return 0
}

func (x *UpdateDependencyDataReq) GetAdditionData() string {
	if x != nil {
		return x.AdditionData
	}
	return ""
}

type ListReportResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                         `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Code    int32                        `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Msg     string                       `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	Total   uint32                       `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	Offset  uint32                       `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	Data    []*ListReportResp_ReportInfo `protobuf:"bytes,6,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ListReportResp) Reset() {
	*x = ListReportResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_rc_v3_rc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListReportResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReportResp) ProtoMessage() {}

func (x *ListReportResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_rc_v3_rc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReportResp.ProtoReflect.Descriptor instead.
func (*ListReportResp) Descriptor() ([]byte, []int) {
	return file_api_rc_v3_rc_proto_rawDescGZIP(), []int{8}
}

func (x *ListReportResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ListReportResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListReportResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ListReportResp) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListReportResp) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListReportResp) GetData() []*ListReportResp_ReportInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type ListReportKwdSearchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version  ReportVersion `protobuf:"varint,1,opt,name=version,proto3,enum=api.rc.v3.ReportVersion" json:"version,omitempty"`
	NameKwd  string        `protobuf:"bytes,2,opt,name=name_kwd,json=nameKwd,proto3" json:"name_kwd,omitempty"`
	PageSize uint32        `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageNum  uint32        `protobuf:"varint,4,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
}

func (x *ListReportKwdSearchReq) Reset() {
	*x = ListReportKwdSearchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_rc_v3_rc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListReportKwdSearchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReportKwdSearchReq) ProtoMessage() {}

func (x *ListReportKwdSearchReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_rc_v3_rc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReportKwdSearchReq.ProtoReflect.Descriptor instead.
func (*ListReportKwdSearchReq) Descriptor() ([]byte, []int) {
	return file_api_rc_v3_rc_proto_rawDescGZIP(), []int{9}
}

func (x *ListReportKwdSearchReq) GetVersion() ReportVersion {
	if x != nil {
		return x.Version
	}
	return ReportVersion_V2
}

func (x *ListReportKwdSearchReq) GetNameKwd() string {
	if x != nil {
		return x.NameKwd
	}
	return ""
}

func (x *ListReportKwdSearchReq) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListReportKwdSearchReq) GetPageNum() uint32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

type GetReportContentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContentId int64         `protobuf:"varint,1,opt,name=content_id,json=contentId,proto3" json:"content_id,omitempty"`
	Version   ReportVersion `protobuf:"varint,2,opt,name=version,proto3,enum=api.rc.v3.ReportVersion" json:"version,omitempty"`
	Realtime  bool          `protobuf:"varint,3,opt,name=realtime,proto3" json:"realtime,omitempty"`
}

func (x *GetReportContentReq) Reset() {
	*x = GetReportContentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_rc_v3_rc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReportContentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReportContentReq) ProtoMessage() {}

func (x *GetReportContentReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_rc_v3_rc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReportContentReq.ProtoReflect.Descriptor instead.
func (*GetReportContentReq) Descriptor() ([]byte, []int) {
	return file_api_rc_v3_rc_proto_rawDescGZIP(), []int{10}
}

func (x *GetReportContentReq) GetContentId() int64 {
	if x != nil {
		return x.ContentId
	}
	return 0
}

func (x *GetReportContentReq) GetVersion() ReportVersion {
	if x != nil {
		return x.Version
	}
	return ReportVersion_V2
}

func (x *GetReportContentReq) GetRealtime() bool {
	if x != nil {
		return x.Realtime
	}
	return false
}

type GetReportContentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 报告内容
	Success bool             `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Code    int32            `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Msg     string           `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	Data    *structpb.Struct `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetReportContentResp) Reset() {
	*x = GetReportContentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_rc_v3_rc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReportContentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReportContentResp) ProtoMessage() {}

func (x *GetReportContentResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_rc_v3_rc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReportContentResp.ProtoReflect.Descriptor instead.
func (*GetReportContentResp) Descriptor() ([]byte, []int) {
	return file_api_rc_v3_rc_proto_rawDescGZIP(), []int{11}
}

func (x *GetReportContentResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetReportContentResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetReportContentResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetReportContentResp) GetData() *structpb.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetDecisionFactorResp_DecisionFactorData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UscId   string `protobuf:"bytes,1,opt,name=usc_id,json=uscId,proto3" json:"usc_id,omitempty"`
	LhQylx  int32  `protobuf:"varint,2,opt,name=lh_qylx,json=lhQylx,proto3" json:"lh_qylx,omitempty"`
	LhCylwz int32  `protobuf:"varint,3,opt,name=lh_cylwz,json=lhCylwz,proto3" json:"lh_cylwz,omitempty"`
	LhGdct  int32  `protobuf:"varint,4,opt,name=lh_gdct,json=lhGdct,proto3" json:"lh_gdct,omitempty"`
	// int32 lh_qybq = 5;
	LhYhsx    int32  `protobuf:"varint,5,opt,name=lh_yhsx,json=lhYhsx,proto3" json:"lh_yhsx,omitempty"`
	LhSfsx    int32  `protobuf:"varint,6,opt,name=lh_sfsx,json=lhSfsx,proto3" json:"lh_sfsx,omitempty"`
	CreatedAt string `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	CreatedBy int64  `protobuf:"varint,8,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	ClaimId   int64  `protobuf:"varint,9,opt,name=claim_id,json=claimId,proto3" json:"claim_id,omitempty"`
}

func (x *GetDecisionFactorResp_DecisionFactorData) Reset() {
	*x = GetDecisionFactorResp_DecisionFactorData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_rc_v3_rc_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDecisionFactorResp_DecisionFactorData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDecisionFactorResp_DecisionFactorData) ProtoMessage() {}

func (x *GetDecisionFactorResp_DecisionFactorData) ProtoReflect() protoreflect.Message {
	mi := &file_api_rc_v3_rc_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDecisionFactorResp_DecisionFactorData.ProtoReflect.Descriptor instead.
func (*GetDecisionFactorResp_DecisionFactorData) Descriptor() ([]byte, []int) {
	return file_api_rc_v3_rc_proto_rawDescGZIP(), []int{3, 0}
}

func (x *GetDecisionFactorResp_DecisionFactorData) GetUscId() string {
	if x != nil {
		return x.UscId
	}
	return ""
}

func (x *GetDecisionFactorResp_DecisionFactorData) GetLhQylx() int32 {
	if x != nil {
		return x.LhQylx
	}
	return 0
}

func (x *GetDecisionFactorResp_DecisionFactorData) GetLhCylwz() int32 {
	if x != nil {
		return x.LhCylwz
	}
	return 0
}

func (x *GetDecisionFactorResp_DecisionFactorData) GetLhGdct() int32 {
	if x != nil {
		return x.LhGdct
	}
	return 0
}

func (x *GetDecisionFactorResp_DecisionFactorData) GetLhYhsx() int32 {
	if x != nil {
		return x.LhYhsx
	}
	return 0
}

func (x *GetDecisionFactorResp_DecisionFactorData) GetLhSfsx() int32 {
	if x != nil {
		return x.LhSfsx
	}
	return 0
}

func (x *GetDecisionFactorResp_DecisionFactorData) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *GetDecisionFactorResp_DecisionFactorData) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *GetDecisionFactorResp_DecisionFactorData) GetClaimId() int64 {
	if x != nil {
		return x.ClaimId
	}
	return 0
}

type ListReportResp_ReportInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 报告id
	ContentId int64 `protobuf:"varint,1,opt,name=content_id,json=contentId,proto3" json:"content_id,omitempty"`
	// 企业名称
	EnterpriseName string `protobuf:"bytes,2,opt,name=enterprise_name,json=enterpriseName,proto3" json:"enterprise_name,omitempty"`
	// 企业统一信用社会代码
	UscId string `protobuf:"bytes,3,opt,name=usc_id,json=uscId,proto3" json:"usc_id,omitempty"`
	// 报文更新月份
	DataCollectMonth string `protobuf:"bytes,4,opt,name=data_collect_month,json=dataCollectMonth,proto3" json:"data_collect_month,omitempty"`
	// 报告是否可用
	Available bool `protobuf:"varint,5,opt,name=available,proto3" json:"available,omitempty"`
	// 报告生成时间 yyyy-MM-dd HH:mm:ss
	ContentUpdatedTime string `protobuf:"bytes,6,opt,name=content_updated_time,json=contentUpdatedTime,proto3" json:"content_updated_time,omitempty"`
}

func (x *ListReportResp_ReportInfo) Reset() {
	*x = ListReportResp_ReportInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_rc_v3_rc_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListReportResp_ReportInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReportResp_ReportInfo) ProtoMessage() {}

func (x *ListReportResp_ReportInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_rc_v3_rc_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReportResp_ReportInfo.ProtoReflect.Descriptor instead.
func (*ListReportResp_ReportInfo) Descriptor() ([]byte, []int) {
	return file_api_rc_v3_rc_proto_rawDescGZIP(), []int{8, 0}
}

func (x *ListReportResp_ReportInfo) GetContentId() int64 {
	if x != nil {
		return x.ContentId
	}
	return 0
}

func (x *ListReportResp_ReportInfo) GetEnterpriseName() string {
	if x != nil {
		return x.EnterpriseName
	}
	return ""
}

func (x *ListReportResp_ReportInfo) GetUscId() string {
	if x != nil {
		return x.UscId
	}
	return ""
}

func (x *ListReportResp_ReportInfo) GetDataCollectMonth() string {
	if x != nil {
		return x.DataCollectMonth
	}
	return ""
}

func (x *ListReportResp_ReportInfo) GetAvailable() bool {
	if x != nil {
		return x.Available
	}
	return false
}

func (x *ListReportResp_ReportInfo) GetContentUpdatedTime() string {
	if x != nil {
		return x.ContentUpdatedTime
	}
	return ""
}

var File_api_rc_v3_rc_proto protoreflect.FileDescriptor

var file_api_rc_v3_rc_proto_rawDesc = []byte{
	0x0a, 0x12, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x63, 0x2f, 0x76, 0x33, 0x2f, 0x72, 0x63, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x63, 0x2e, 0x76, 0x33, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2c, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x41, 0x68, 0x70, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19,
	0x0a, 0x08, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x49, 0x64, 0x22, 0x7f, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x41, 0x68, 0x70, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2b, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x35, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x52,
	0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x22, 0xa6, 0x03, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x47, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x72, 0x63, 0x2e, 0x76, 0x33, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x44, 0x65, 0x63, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x1a, 0x83, 0x02, 0x0a, 0x12, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x15, 0x0a, 0x06, 0x75,
	0x73, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x73, 0x63,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x68, 0x5f, 0x71, 0x79, 0x6c, 0x78, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x68, 0x51, 0x79, 0x6c, 0x78, 0x12, 0x19, 0x0a, 0x08, 0x6c,
	0x68, 0x5f, 0x63, 0x79, 0x6c, 0x77, 0x7a, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6c,
	0x68, 0x43, 0x79, 0x6c, 0x77, 0x7a, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x68, 0x5f, 0x67, 0x64, 0x63,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x68, 0x47, 0x64, 0x63, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x6c, 0x68, 0x5f, 0x79, 0x68, 0x73, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x6c, 0x68, 0x59, 0x68, 0x73, 0x78, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x68, 0x5f, 0x73,
	0x66, 0x73, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x68, 0x53, 0x66, 0x73,
	0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12,
	0x19, 0x0a, 0x08, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x49, 0x64, 0x22, 0x60, 0x0a, 0x1e, 0x49, 0x6e,
	0x73, 0x65, 0x72, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xb5, 0x01, 0x0a,
	0x1d, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x63,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x12, 0x15,
	0x0a, 0x06, 0x75, 0x73, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x75, 0x73, 0x63, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x68, 0x5f, 0x71, 0x79, 0x6c, 0x78,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x68, 0x51, 0x79, 0x6c, 0x78, 0x12, 0x19,
	0x0a, 0x08, 0x6c, 0x68, 0x5f, 0x63, 0x79, 0x6c, 0x77, 0x7a, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x6c, 0x68, 0x43, 0x79, 0x6c, 0x77, 0x7a, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x68, 0x5f,
	0x67, 0x64, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x68, 0x47, 0x64,
	0x63, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x68, 0x5f, 0x79, 0x68, 0x73, 0x78, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x68, 0x59, 0x68, 0x73, 0x78, 0x12, 0x17, 0x0a, 0x07, 0x6c,
	0x68, 0x5f, 0x73, 0x66, 0x73, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x68,
	0x53, 0x66, 0x73, 0x78, 0x22, 0xb9, 0x01, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x68, 0x5f, 0x71, 0x79, 0x6c, 0x78, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x6c, 0x68, 0x51, 0x79, 0x6c, 0x78, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x68,
	0x5f, 0x63, 0x79, 0x6c, 0x77, 0x7a, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6c, 0x68,
	0x43, 0x79, 0x6c, 0x77, 0x7a, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x68, 0x5f, 0x67, 0x64, 0x63, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x68, 0x47, 0x64, 0x63, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x6c, 0x68, 0x5f, 0x79, 0x68, 0x73, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x6c, 0x68, 0x59, 0x68, 0x73, 0x78, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x68, 0x5f, 0x73, 0x66,
	0x73, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x68, 0x53, 0x66, 0x73, 0x78,
	0x22, 0xcd, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x65, 0x6e,
	0x64, 0x65, 0x6e, 0x63, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x6c, 0x68, 0x5f, 0x71, 0x79, 0x6c, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6c,
	0x68, 0x51, 0x79, 0x6c, 0x78, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x68, 0x5f, 0x63, 0x79, 0x6c, 0x77,
	0x7a, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6c, 0x68, 0x43, 0x79, 0x6c, 0x77, 0x7a,
	0x12, 0x17, 0x0a, 0x07, 0x6c, 0x68, 0x5f, 0x67, 0x64, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x6c, 0x68, 0x47, 0x64, 0x63, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x68, 0x5f,
	0x79, 0x68, 0x73, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x68, 0x59, 0x68,
	0x73, 0x78, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x68, 0x5f, 0x73, 0x66, 0x73, 0x78, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x68, 0x53, 0x66, 0x73, 0x78, 0x12, 0x23, 0x0a, 0x0d, 0x61,
	0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x22, 0xa4, 0x03, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x12, 0x38, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x63, 0x2e, 0x76, 0x33, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0xe9, 0x01, 0x0a, 0x0a,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x75, 0x73, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x75, 0x73, 0x63, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x9f, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4b, 0x77, 0x64, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52,
	0x65, 0x71, 0x12, 0x32, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x63, 0x2e, 0x76, 0x33, 0x2e,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x6b,
	0x77, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x61, 0x6d, 0x65, 0x4b, 0x77,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x22, 0x84, 0x01, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x32, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x63, 0x2e, 0x76, 0x33, 0x2e, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65,
	0x22, 0x83, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x2a, 0x2b, 0x0a, 0x0d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x06, 0x0a, 0x02, 0x56, 0x32, 0x10, 0x00, 0x12,
	0x06, 0x0a, 0x02, 0x56, 0x33, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4c, 0x61, 0x74, 0x65, 0x73,
	0x74, 0x10, 0x02, 0x32, 0xb7, 0x06, 0x0a, 0x09, 0x52, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0xa2, 0x01, 0x0a, 0x1a, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x12, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x63, 0x2e, 0x76, 0x33, 0x2e, 0x49, 0x6e, 0x73,
	0x65, 0x72, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x72, 0x63, 0x2e, 0x76, 0x33, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x3a, 0x01, 0x2a,
	0x22, 0x24, 0x2f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x2f, 0x72, 0x63, 0x2f, 0x76, 0x33, 0x2f,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x2d,
	0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0xa2, 0x01, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x46,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x63, 0x2e, 0x76,
	0x33, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x65,
	0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x1a,
	0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x63, 0x2e, 0x76, 0x33, 0x2e, 0x49, 0x6e, 0x73, 0x65,
	0x72, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x29, 0x3a, 0x01, 0x2a, 0x1a, 0x24, 0x2f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x2f, 0x72,
	0x63, 0x2f, 0x76, 0x33, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x64, 0x65, 0x63, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x2d, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x8a, 0x01, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x63,
	0x2e, 0x76, 0x33, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x46,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72,
	0x63, 0x2e, 0x76, 0x33, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x26, 0x12, 0x24, 0x2f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x2f, 0x72, 0x63, 0x2f, 0x76,
	0x33, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x2d, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x6d, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x63, 0x2e,
	0x76, 0x33, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4b, 0x77, 0x64,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x72, 0x63, 0x2e, 0x76, 0x33, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x6d,
	0x69, 0x63, 0x72, 0x6f, 0x73, 0x2f, 0x72, 0x63, 0x2f, 0x76, 0x33, 0x2f, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x79, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x72, 0x63, 0x2e, 0x76, 0x33, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x72, 0x63, 0x2e, 0x76, 0x33, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x24, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1e, 0x12, 0x1c, 0x2f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x2f, 0x72, 0x63,
	0x2f, 0x76, 0x33, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x69, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x68, 0x70, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x63, 0x2e, 0x76, 0x33, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x68, 0x70, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1b,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x63, 0x2e, 0x76, 0x33, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x68,
	0x70, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x20, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1a, 0x12, 0x18, 0x2f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x2f, 0x72, 0x63, 0x2f,
	0x76, 0x33, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x61, 0x68, 0x70, 0x42, 0x2c, 0x0a,
	0x09, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x63, 0x2e, 0x76, 0x33, 0x42, 0x04, 0x52, 0x63, 0x56, 0x33,
	0x50, 0x01, 0x5a, 0x17, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x72, 0x63, 0x2f, 0x76, 0x33, 0x3b, 0x76, 0x33, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_api_rc_v3_rc_proto_rawDescOnce sync.Once
	file_api_rc_v3_rc_proto_rawDescData = file_api_rc_v3_rc_proto_rawDesc
)

func file_api_rc_v3_rc_proto_rawDescGZIP() []byte {
	file_api_rc_v3_rc_proto_rawDescOnce.Do(func() {
		file_api_rc_v3_rc_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_rc_v3_rc_proto_rawDescData)
	})
	return file_api_rc_v3_rc_proto_rawDescData
}

var file_api_rc_v3_rc_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_rc_v3_rc_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_api_rc_v3_rc_proto_goTypes = []interface{}{
	(ReportVersion)(0),                               // 0: api.rc.v3.ReportVersion
	(*GetAhpResultReq)(nil),                          // 1: api.rc.v3.GetAhpResultReq
	(*GetAhpResultResp)(nil),                         // 2: api.rc.v3.GetAhpResultResp
	(*GetDecisionFactorReq)(nil),                     // 3: api.rc.v3.GetDecisionFactorReq
	(*GetDecisionFactorResp)(nil),                    // 4: api.rc.v3.GetDecisionFactorResp
	(*InsertReportDecisionFactorResp)(nil),           // 5: api.rc.v3.InsertReportDecisionFactorResp
	(*InsertReportDecisionFactorReq)(nil),            // 6: api.rc.v3.InsertReportDecisionFactorReq
	(*UpdateReportDecisionFactorReq)(nil),            // 7: api.rc.v3.UpdateReportDecisionFactorReq
	(*UpdateDependencyDataReq)(nil),                  // 8: api.rc.v3.UpdateDependencyDataReq
	(*ListReportResp)(nil),                           // 9: api.rc.v3.ListReportResp
	(*ListReportKwdSearchReq)(nil),                   // 10: api.rc.v3.ListReportKwdSearchReq
	(*GetReportContentReq)(nil),                      // 11: api.rc.v3.GetReportContentReq
	(*GetReportContentResp)(nil),                     // 12: api.rc.v3.GetReportContentResp
	(*GetDecisionFactorResp_DecisionFactorData)(nil), // 13: api.rc.v3.GetDecisionFactorResp.DecisionFactorData
	(*ListReportResp_ReportInfo)(nil),                // 14: api.rc.v3.ListReportResp.ReportInfo
	(*structpb.Struct)(nil),                          // 15: google.protobuf.Struct
}
var file_api_rc_v3_rc_proto_depIdxs = []int32{
	15, // 0: api.rc.v3.GetAhpResultResp.data:type_name -> google.protobuf.Struct
	13, // 1: api.rc.v3.GetDecisionFactorResp.data:type_name -> api.rc.v3.GetDecisionFactorResp.DecisionFactorData
	14, // 2: api.rc.v3.ListReportResp.data:type_name -> api.rc.v3.ListReportResp.ReportInfo
	0,  // 3: api.rc.v3.ListReportKwdSearchReq.version:type_name -> api.rc.v3.ReportVersion
	0,  // 4: api.rc.v3.GetReportContentReq.version:type_name -> api.rc.v3.ReportVersion
	15, // 5: api.rc.v3.GetReportContentResp.data:type_name -> google.protobuf.Struct
	6,  // 6: api.rc.v3.RcService.InsertReportDecisionFactor:input_type -> api.rc.v3.InsertReportDecisionFactorReq
	7,  // 7: api.rc.v3.RcService.UpdateReportDecisionFactor:input_type -> api.rc.v3.UpdateReportDecisionFactorReq
	3,  // 8: api.rc.v3.RcService.GetReportDecisionFactor:input_type -> api.rc.v3.GetDecisionFactorReq
	10, // 9: api.rc.v3.RcService.ListReport:input_type -> api.rc.v3.ListReportKwdSearchReq
	11, // 10: api.rc.v3.RcService.GetReportContent:input_type -> api.rc.v3.GetReportContentReq
	1,  // 11: api.rc.v3.RcService.GetAhpResult:input_type -> api.rc.v3.GetAhpResultReq
	5,  // 12: api.rc.v3.RcService.InsertReportDecisionFactor:output_type -> api.rc.v3.InsertReportDecisionFactorResp
	5,  // 13: api.rc.v3.RcService.UpdateReportDecisionFactor:output_type -> api.rc.v3.InsertReportDecisionFactorResp
	4,  // 14: api.rc.v3.RcService.GetReportDecisionFactor:output_type -> api.rc.v3.GetDecisionFactorResp
	9,  // 15: api.rc.v3.RcService.ListReport:output_type -> api.rc.v3.ListReportResp
	12, // 16: api.rc.v3.RcService.GetReportContent:output_type -> api.rc.v3.GetReportContentResp
	2,  // 17: api.rc.v3.RcService.GetAhpResult:output_type -> api.rc.v3.GetAhpResultResp
	12, // [12:18] is the sub-list for method output_type
	6,  // [6:12] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_api_rc_v3_rc_proto_init() }
func file_api_rc_v3_rc_proto_init() {
	if File_api_rc_v3_rc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_rc_v3_rc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAhpResultReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_rc_v3_rc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAhpResultResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_rc_v3_rc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDecisionFactorReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_rc_v3_rc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDecisionFactorResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_rc_v3_rc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertReportDecisionFactorResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_rc_v3_rc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertReportDecisionFactorReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_rc_v3_rc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateReportDecisionFactorReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_rc_v3_rc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDependencyDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_rc_v3_rc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListReportResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_rc_v3_rc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListReportKwdSearchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_rc_v3_rc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReportContentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_rc_v3_rc_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReportContentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_rc_v3_rc_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDecisionFactorResp_DecisionFactorData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_rc_v3_rc_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListReportResp_ReportInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_rc_v3_rc_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_rc_v3_rc_proto_goTypes,
		DependencyIndexes: file_api_rc_v3_rc_proto_depIdxs,
		EnumInfos:         file_api_rc_v3_rc_proto_enumTypes,
		MessageInfos:      file_api_rc_v3_rc_proto_msgTypes,
	}.Build()
	File_api_rc_v3_rc_proto = out.File
	file_api_rc_v3_rc_proto_rawDesc = nil
	file_api_rc_v3_rc_proto_goTypes = nil
	file_api_rc_v3_rc_proto_depIdxs = nil
}
