// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.4
// source: api/graph/v1/graph_net.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NetConstResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvailableRelScope *structpb.Struct `protobuf:"bytes,1,opt,name=availableRelScope,proto3" json:"availableRelScope,omitempty"`
	NetDemoDefaultId  string           `protobuf:"bytes,2,opt,name=netDemoDefaultId,proto3" json:"netDemoDefaultId,omitempty"`
}

func (x *NetConstResp) Reset() {
	*x = NetConstResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_graph_v1_graph_net_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetConstResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetConstResp) ProtoMessage() {}

func (x *NetConstResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_graph_v1_graph_net_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetConstResp.ProtoReflect.Descriptor instead.
func (*NetConstResp) Descriptor() ([]byte, []int) {
	return file_api_graph_v1_graph_net_proto_rawDescGZIP(), []int{0}
}

func (x *NetConstResp) GetAvailableRelScope() *structpb.Struct {
	if x != nil {
		return x.AvailableRelScope
	}
	return nil
}

func (x *NetConstResp) GetNetDemoDefaultId() string {
	if x != nil {
		return x.NetDemoDefaultId
	}
	return ""
}

type GetPathBetweenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceId string   `protobuf:"bytes,1,opt,name=sourceId,proto3" json:"sourceId,omitempty"`
	TargetId string   `protobuf:"bytes,2,opt,name=targetId,proto3" json:"targetId,omitempty"`
	MaxDepth int64    `protobuf:"varint,3,opt,name=maxDepth,proto3" json:"maxDepth,omitempty"`
	RelScope []string `protobuf:"bytes,4,rep,name=relScope,proto3" json:"relScope,omitempty"`
}

func (x *GetPathBetweenReq) Reset() {
	*x = GetPathBetweenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_graph_v1_graph_net_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPathBetweenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPathBetweenReq) ProtoMessage() {}

func (x *GetPathBetweenReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_graph_v1_graph_net_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPathBetweenReq.ProtoReflect.Descriptor instead.
func (*GetPathBetweenReq) Descriptor() ([]byte, []int) {
	return file_api_graph_v1_graph_net_proto_rawDescGZIP(), []int{1}
}

func (x *GetPathBetweenReq) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

func (x *GetPathBetweenReq) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *GetPathBetweenReq) GetMaxDepth() int64 {
	if x != nil {
		return x.MaxDepth
	}
	return 0
}

func (x *GetPathBetweenReq) GetRelScope() []string {
	if x != nil {
		return x.RelScope
	}
	return nil
}

type AvailableRelTypeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool             `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Code    int32            `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Msg     string           `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	Data    *structpb.Struct `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AvailableRelTypeResp) Reset() {
	*x = AvailableRelTypeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_graph_v1_graph_net_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvailableRelTypeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvailableRelTypeResp) ProtoMessage() {}

func (x *AvailableRelTypeResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_graph_v1_graph_net_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvailableRelTypeResp.ProtoReflect.Descriptor instead.
func (*AvailableRelTypeResp) Descriptor() ([]byte, []int) {
	return file_api_graph_v1_graph_net_proto_rawDescGZIP(), []int{2}
}

func (x *AvailableRelTypeResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AvailableRelTypeResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AvailableRelTypeResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AvailableRelTypeResp) GetData() *structpb.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetNodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetNodeReq) Reset() {
	*x = GetNodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_graph_v1_graph_net_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeReq) ProtoMessage() {}

func (x *GetNodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_graph_v1_graph_net_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeReq.ProtoReflect.Descriptor instead.
func (*GetNodeReq) Descriptor() ([]byte, []int) {
	return file_api_graph_v1_graph_net_proto_rawDescGZIP(), []int{3}
}

func (x *GetNodeReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type NetExpandsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids      []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	Depth    uint32   `protobuf:"varint,2,opt,name=depth,proto3" json:"depth,omitempty"`
	Limit    uint32   `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	RelScope []string `protobuf:"bytes,4,rep,name=relScope,proto3" json:"relScope,omitempty"`
}

func (x *NetExpandsReq) Reset() {
	*x = NetExpandsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_graph_v1_graph_net_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetExpandsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetExpandsReq) ProtoMessage() {}

func (x *NetExpandsReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_graph_v1_graph_net_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetExpandsReq.ProtoReflect.Descriptor instead.
func (*NetExpandsReq) Descriptor() ([]byte, []int) {
	return file_api_graph_v1_graph_net_proto_rawDescGZIP(), []int{4}
}

func (x *NetExpandsReq) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *NetExpandsReq) GetDepth() uint32 {
	if x != nil {
		return x.Depth
	}
	return 0
}

func (x *NetExpandsReq) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *NetExpandsReq) GetRelScope() []string {
	if x != nil {
		return x.RelScope
	}
	return nil
}

type NetExpandReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Depth    uint32   `protobuf:"varint,2,opt,name=depth,proto3" json:"depth,omitempty"`
	Limit    uint32   `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	RelScope []string `protobuf:"bytes,4,rep,name=relScope,proto3" json:"relScope,omitempty"`
}

func (x *NetExpandReq) Reset() {
	*x = NetExpandReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_graph_v1_graph_net_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetExpandReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetExpandReq) ProtoMessage() {}

func (x *NetExpandReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_graph_v1_graph_net_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetExpandReq.ProtoReflect.Descriptor instead.
func (*NetExpandReq) Descriptor() ([]byte, []int) {
	return file_api_graph_v1_graph_net_proto_rawDescGZIP(), []int{5}
}

func (x *NetExpandReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NetExpandReq) GetDepth() uint32 {
	if x != nil {
		return x.Depth
	}
	return 0
}

func (x *NetExpandReq) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *NetExpandReq) GetRelScope() []string {
	if x != nil {
		return x.RelScope
	}
	return nil
}

type GetPaginationNodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum      uint32   `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
	PageSize     uint32   `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Id           string   `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	ScopeRelType []string `protobuf:"bytes,4,rep,name=scope_rel_type,json=scopeRelType,proto3" json:"scope_rel_type,omitempty"`
}

func (x *GetPaginationNodeReq) Reset() {
	*x = GetPaginationNodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_graph_v1_graph_net_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPaginationNodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaginationNodeReq) ProtoMessage() {}

func (x *GetPaginationNodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_graph_v1_graph_net_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaginationNodeReq.ProtoReflect.Descriptor instead.
func (*GetPaginationNodeReq) Descriptor() ([]byte, []int) {
	return file_api_graph_v1_graph_net_proto_rawDescGZIP(), []int{6}
}

func (x *GetPaginationNodeReq) GetPageNum() uint32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *GetPaginationNodeReq) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetPaginationNodeReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetPaginationNodeReq) GetScopeRelType() []string {
	if x != nil {
		return x.ScopeRelType
	}
	return nil
}

type Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title  string           `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Labels []string         `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty"`
	Data   *structpb.Struct `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Node) Reset() {
	*x = Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_graph_v1_graph_net_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_api_graph_v1_graph_net_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_api_graph_v1_graph_net_proto_rawDescGZIP(), []int{7}
}

func (x *Node) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Node) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Node) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Node) GetData() *structpb.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

type Edge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source string           `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Target string           `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	Id     string           `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Label  string           `protobuf:"bytes,4,opt,name=label,proto3" json:"label,omitempty"`
	Data   *structpb.Struct `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Edge) Reset() {
	*x = Edge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_graph_v1_graph_net_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Edge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Edge) ProtoMessage() {}

func (x *Edge) ProtoReflect() protoreflect.Message {
	mi := &file_api_graph_v1_graph_net_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Edge.ProtoReflect.Descriptor instead.
func (*Edge) Descriptor() ([]byte, []int) {
	return file_api_graph_v1_graph_net_proto_rawDescGZIP(), []int{8}
}

func (x *Edge) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Edge) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *Edge) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Edge) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *Edge) GetData() *structpb.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

type Net struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes []*Node `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Edges []*Edge `protobuf:"bytes,2,rep,name=edges,proto3" json:"edges,omitempty"`
}

func (x *Net) Reset() {
	*x = Net{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_graph_v1_graph_net_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Net) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net) ProtoMessage() {}

func (x *Net) ProtoReflect() protoreflect.Message {
	mi := &file_api_graph_v1_graph_net_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net.ProtoReflect.Descriptor instead.
func (*Net) Descriptor() ([]byte, []int) {
	return file_api_graph_v1_graph_net_proto_rawDescGZIP(), []int{9}
}

func (x *Net) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *Net) GetEdges() []*Edge {
	if x != nil {
		return x.Edges
	}
	return nil
}

type NodeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Code    int32  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Msg     string `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	Data    *Node  `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *NodeResp) Reset() {
	*x = NodeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_graph_v1_graph_net_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeResp) ProtoMessage() {}

func (x *NodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_graph_v1_graph_net_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeResp.ProtoReflect.Descriptor instead.
func (*NodeResp) Descriptor() ([]byte, []int) {
	return file_api_graph_v1_graph_net_proto_rawDescGZIP(), []int{10}
}

func (x *NodeResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *NodeResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *NodeResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *NodeResp) GetData() *Node {
	if x != nil {
		return x.Data
	}
	return nil
}

type NetResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Code    int32  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Msg     string `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	Data    *Net   `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *NetResp) Reset() {
	*x = NetResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_graph_v1_graph_net_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetResp) ProtoMessage() {}

func (x *NetResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_graph_v1_graph_net_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetResp.ProtoReflect.Descriptor instead.
func (*NetResp) Descriptor() ([]byte, []int) {
	return file_api_graph_v1_graph_net_proto_rawDescGZIP(), []int{11}
}

func (x *NetResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *NetResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *NetResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *NetResp) GetData() *Net {
	if x != nil {
		return x.Data
	}
	return nil
}

type NetPaginationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success  bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Code     int32  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Msg      string `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	Total    int32  `protobuf:"varint,5,opt,name=total,proto3" json:"total,omitempty"`
	Current  int32  `protobuf:"varint,6,opt,name=current,proto3" json:"current,omitempty"`
	PageSize int32  `protobuf:"varint,7,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Data     *Net   `protobuf:"bytes,8,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *NetPaginationResp) Reset() {
	*x = NetPaginationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_graph_v1_graph_net_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetPaginationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetPaginationResp) ProtoMessage() {}

func (x *NetPaginationResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_graph_v1_graph_net_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetPaginationResp.ProtoReflect.Descriptor instead.
func (*NetPaginationResp) Descriptor() ([]byte, []int) {
	return file_api_graph_v1_graph_net_proto_rawDescGZIP(), []int{12}
}

func (x *NetPaginationResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *NetPaginationResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *NetPaginationResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *NetPaginationResp) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *NetPaginationResp) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *NetPaginationResp) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *NetPaginationResp) GetData() *Net {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_api_graph_v1_graph_net_proto protoreflect.FileDescriptor

var file_api_graph_v1_graph_net_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2f, 0x76, 0x31, 0x2f, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x5f, 0x6e, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c,
	0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x81, 0x01, 0x0a, 0x0c, 0x4e, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x11, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x11, 0x61, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x2a, 0x0a,
	0x10, 0x6e, 0x65, 0x74, 0x44, 0x65, 0x6d, 0x6f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6e, 0x65, 0x74, 0x44, 0x65, 0x6d, 0x6f,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x64, 0x22, 0x83, 0x01, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x50, 0x61, 0x74, 0x68, 0x42, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x44, 0x65,
	0x70, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x44, 0x65,
	0x70, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x6c, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x22,
	0x83, 0x01, 0x0a, 0x14, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x1c, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x69, 0x0a, 0x0d, 0x4e, 0x65, 0x74, 0x45, 0x78, 0x70, 0x61, 0x6e, 0x64,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x70, 0x74, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x64, 0x65, 0x70, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x6c, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x22, 0x66,
	0x0a, 0x0c, 0x4e, 0x65, 0x74, 0x45, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x64, 0x65, 0x70, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x64,
	0x65, 0x70, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65,
	0x6c, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65,
	0x6c, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x22, 0x84, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x5f, 0x72, 0x65, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0c, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x22, 0x71, 0x0a,
	0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x89, 0x01, 0x0a, 0x04, 0x45, 0x64, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12,
	0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x59, 0x0a, 0x03,
	0x4e, 0x65, 0x74, 0x12, 0x28, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x76,
	0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x28, 0x0a,
	0x05, 0x65, 0x64, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x64, 0x67, 0x65,
	0x52, 0x05, 0x65, 0x64, 0x67, 0x65, 0x73, 0x22, 0x72, 0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x26, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x76, 0x31,
	0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x70, 0x0a, 0x07, 0x4e,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x25, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc7, 0x01,
	0x0a, 0x11, 0x4e, 0x65, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x25, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65,
	0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0xc4, 0x08, 0x0a, 0x0f, 0x4e, 0x65, 0x74, 0x47,
	0x72, 0x61, 0x70, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x66, 0x0a, 0x0c, 0x47,
	0x65, 0x74, 0x4e, 0x65, 0x74, 0x45, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x12, 0x1a, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x45, 0x78,
	0x70, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x23,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x2f,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x65, 0x74, 0x2f, 0x65, 0x78, 0x70,
	0x61, 0x6e, 0x64, 0x12, 0x69, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x74, 0x45, 0x78, 0x70,
	0x61, 0x6e, 0x64, 0x73, 0x12, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x45, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x76, 0x31,
	0x2e, 0x4e, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e,
	0x12, 0x1c, 0x2f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x2f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2f,
	0x76, 0x31, 0x2f, 0x6e, 0x65, 0x74, 0x2f, 0x65, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x5e,
	0x0a, 0x07, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e,
	0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x21, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x2f, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x65, 0x74, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x7c,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x4e, 0x65, 0x74,
	0x12, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d, 0x2f,
	0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x2f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2f, 0x76, 0x31, 0x2f,
	0x6e, 0x65, 0x74, 0x2f, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x12, 0x7a, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x4e, 0x65, 0x74, 0x12, 0x22, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x76, 0x31,
	0x2e, 0x4e, 0x65, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x12, 0x1c, 0x2f, 0x6d, 0x69, 0x63,
	0x72, 0x6f, 0x73, 0x2f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x65, 0x74,
	0x2f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x95, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74,
	0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65,
	0x54, 0x6f, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x12, 0x18, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x36, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x30,
	0x12, 0x2e, 0x2f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x2f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2f,
	0x76, 0x31, 0x2f, 0x6e, 0x65, 0x74, 0x2f, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x2f,
	0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x93, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x52, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x54, 0x6f, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x35, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2f, 0x12, 0x2d, 0x2f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73,
	0x2f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x65, 0x74, 0x2f, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x52,
	0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x72, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74,
	0x68, 0x42, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x68, 0x42,
	0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x12, 0x20, 0x2f, 0x6d, 0x69, 0x63, 0x72, 0x6f,
	0x73, 0x2f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x65, 0x74, 0x2f, 0x70,
	0x61, 0x74, 0x68, 0x42, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x12, 0x62, 0x0a, 0x08, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1a,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1c, 0x12, 0x1a, 0x2f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x2f, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x65, 0x74, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x42, 0x39,
	0x0a, 0x0c, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x76, 0x31, 0x42, 0x07,
	0x47, 0x72, 0x61, 0x70, 0x68, 0x56, 0x31, 0x50, 0x01, 0x5a, 0x1e, 0x62, 0x72, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x6b, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_api_graph_v1_graph_net_proto_rawDescOnce sync.Once
	file_api_graph_v1_graph_net_proto_rawDescData = file_api_graph_v1_graph_net_proto_rawDesc
)

func file_api_graph_v1_graph_net_proto_rawDescGZIP() []byte {
	file_api_graph_v1_graph_net_proto_rawDescOnce.Do(func() {
		file_api_graph_v1_graph_net_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_graph_v1_graph_net_proto_rawDescData)
	})
	return file_api_graph_v1_graph_net_proto_rawDescData
}

var file_api_graph_v1_graph_net_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_api_graph_v1_graph_net_proto_goTypes = []interface{}{
	(*NetConstResp)(nil),         // 0: api.graph.v1.NetConstResp
	(*GetPathBetweenReq)(nil),    // 1: api.graph.v1.GetPathBetweenReq
	(*AvailableRelTypeResp)(nil), // 2: api.graph.v1.AvailableRelTypeResp
	(*GetNodeReq)(nil),           // 3: api.graph.v1.GetNodeReq
	(*NetExpandsReq)(nil),        // 4: api.graph.v1.NetExpandsReq
	(*NetExpandReq)(nil),         // 5: api.graph.v1.NetExpandReq
	(*GetPaginationNodeReq)(nil), // 6: api.graph.v1.GetPaginationNodeReq
	(*Node)(nil),                 // 7: api.graph.v1.Node
	(*Edge)(nil),                 // 8: api.graph.v1.Edge
	(*Net)(nil),                  // 9: api.graph.v1.Net
	(*NodeResp)(nil),             // 10: api.graph.v1.NodeResp
	(*NetResp)(nil),              // 11: api.graph.v1.NetResp
	(*NetPaginationResp)(nil),    // 12: api.graph.v1.NetPaginationResp
	(*structpb.Struct)(nil),      // 13: google.protobuf.Struct
	(*emptypb.Empty)(nil),        // 14: google.protobuf.Empty
}
var file_api_graph_v1_graph_net_proto_depIdxs = []int32{
	13, // 0: api.graph.v1.NetConstResp.availableRelScope:type_name -> google.protobuf.Struct
	13, // 1: api.graph.v1.AvailableRelTypeResp.data:type_name -> google.protobuf.Struct
	13, // 2: api.graph.v1.Node.data:type_name -> google.protobuf.Struct
	13, // 3: api.graph.v1.Edge.data:type_name -> google.protobuf.Struct
	7,  // 4: api.graph.v1.Net.nodes:type_name -> api.graph.v1.Node
	8,  // 5: api.graph.v1.Net.edges:type_name -> api.graph.v1.Edge
	7,  // 6: api.graph.v1.NodeResp.data:type_name -> api.graph.v1.Node
	9,  // 7: api.graph.v1.NetResp.data:type_name -> api.graph.v1.Net
	9,  // 8: api.graph.v1.NetPaginationResp.data:type_name -> api.graph.v1.Net
	5,  // 9: api.graph.v1.NetGraphService.GetNetExpand:input_type -> api.graph.v1.NetExpandReq
	4,  // 10: api.graph.v1.NetGraphService.GetNetExpands:input_type -> api.graph.v1.NetExpandsReq
	3,  // 11: api.graph.v1.NetGraphService.GetNode:input_type -> api.graph.v1.GetNodeReq
	6,  // 12: api.graph.v1.NetGraphService.GetChildrenNet:input_type -> api.graph.v1.GetPaginationNodeReq
	6,  // 13: api.graph.v1.NetGraphService.GetParentsNet:input_type -> api.graph.v1.GetPaginationNodeReq
	3,  // 14: api.graph.v1.NetGraphService.GetAvailableRelTypeToChildren:input_type -> api.graph.v1.GetNodeReq
	3,  // 15: api.graph.v1.NetGraphService.GetAvailableRelTypeToParents:input_type -> api.graph.v1.GetNodeReq
	1,  // 16: api.graph.v1.NetGraphService.GetPathTo:input_type -> api.graph.v1.GetPathBetweenReq
	14, // 17: api.graph.v1.NetGraphService.GetConst:input_type -> google.protobuf.Empty
	11, // 18: api.graph.v1.NetGraphService.GetNetExpand:output_type -> api.graph.v1.NetResp
	11, // 19: api.graph.v1.NetGraphService.GetNetExpands:output_type -> api.graph.v1.NetResp
	10, // 20: api.graph.v1.NetGraphService.GetNode:output_type -> api.graph.v1.NodeResp
	12, // 21: api.graph.v1.NetGraphService.GetChildrenNet:output_type -> api.graph.v1.NetPaginationResp
	12, // 22: api.graph.v1.NetGraphService.GetParentsNet:output_type -> api.graph.v1.NetPaginationResp
	2,  // 23: api.graph.v1.NetGraphService.GetAvailableRelTypeToChildren:output_type -> api.graph.v1.AvailableRelTypeResp
	2,  // 24: api.graph.v1.NetGraphService.GetAvailableRelTypeToParents:output_type -> api.graph.v1.AvailableRelTypeResp
	11, // 25: api.graph.v1.NetGraphService.GetPathTo:output_type -> api.graph.v1.NetResp
	0,  // 26: api.graph.v1.NetGraphService.GetConst:output_type -> api.graph.v1.NetConstResp
	18, // [18:27] is the sub-list for method output_type
	9,  // [9:18] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_api_graph_v1_graph_net_proto_init() }
func file_api_graph_v1_graph_net_proto_init() {
	if File_api_graph_v1_graph_net_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_graph_v1_graph_net_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetConstResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_graph_v1_graph_net_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPathBetweenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_graph_v1_graph_net_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvailableRelTypeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_graph_v1_graph_net_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_graph_v1_graph_net_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetExpandsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_graph_v1_graph_net_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetExpandReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_graph_v1_graph_net_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPaginationNodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_graph_v1_graph_net_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_graph_v1_graph_net_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Edge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_graph_v1_graph_net_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Net); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_graph_v1_graph_net_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_graph_v1_graph_net_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_graph_v1_graph_net_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetPaginationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_graph_v1_graph_net_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_graph_v1_graph_net_proto_goTypes,
		DependencyIndexes: file_api_graph_v1_graph_net_proto_depIdxs,
		MessageInfos:      file_api_graph_v1_graph_net_proto_msgTypes,
	}.Build()
	File_api_graph_v1_graph_net_proto = out.File
	file_api_graph_v1_graph_net_proto_rawDesc = nil
	file_api_graph_v1_graph_net_proto_goTypes = nil
	file_api_graph_v1_graph_net_proto_depIdxs = nil
}
