// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.4
// source: api/dw/v2/dw.proto

package dwV2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EquityTransparencyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conclusion string             `protobuf:"bytes,1,opt,name=conclusion,proto3" json:"conclusion,omitempty"`
	Data       []*structpb.Struct `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	UscId      string             `protobuf:"bytes,3,opt,name=usc_id,json=uscId,proto3" json:"usc_id,omitempty"`
}

func (x *EquityTransparencyResp) Reset() {
	*x = EquityTransparencyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dw_v2_dw_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EquityTransparencyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EquityTransparencyResp) ProtoMessage() {}

func (x *EquityTransparencyResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_dw_v2_dw_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EquityTransparencyResp.ProtoReflect.Descriptor instead.
func (*EquityTransparencyResp) Descriptor() ([]byte, []int) {
	return file_api_dw_v2_dw_proto_rawDescGZIP(), []int{0}
}

func (x *EquityTransparencyResp) GetConclusion() string {
	if x != nil {
		return x.Conclusion
	}
	return ""
}

func (x *EquityTransparencyResp) GetData() []*structpb.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *EquityTransparencyResp) GetUscId() string {
	if x != nil {
		return x.UscId
	}
	return ""
}

type GetEntIdentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnterpriseName string `protobuf:"bytes,1,opt,name=enterprise_name,json=enterpriseName,proto3" json:"enterprise_name,omitempty"`
}

func (x *GetEntIdentReq) Reset() {
	*x = GetEntIdentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dw_v2_dw_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEntIdentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEntIdentReq) ProtoMessage() {}

func (x *GetEntIdentReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_dw_v2_dw_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEntIdentReq.ProtoReflect.Descriptor instead.
func (*GetEntIdentReq) Descriptor() ([]byte, []int) {
	return file_api_dw_v2_dw_proto_rawDescGZIP(), []int{1}
}

func (x *GetEntIdentReq) GetEnterpriseName() string {
	if x != nil {
		return x.EnterpriseName
	}
	return ""
}

type EntIdentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UscId string `protobuf:"bytes,4,opt,name=usc_id,json=uscId,proto3" json:"usc_id,omitempty"`
}

func (x *EntIdentResp) Reset() {
	*x = EntIdentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dw_v2_dw_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntIdentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntIdentResp) ProtoMessage() {}

func (x *EntIdentResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_dw_v2_dw_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntIdentResp.ProtoReflect.Descriptor instead.
func (*EntIdentResp) Descriptor() ([]byte, []int) {
	return file_api_dw_v2_dw_proto_rawDescGZIP(), []int{2}
}

func (x *EntIdentResp) GetUscId() string {
	if x != nil {
		return x.UscId
	}
	return ""
}

type EntInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UscId                         string `protobuf:"bytes,1,opt,name=usc_id,json=uscId,proto3" json:"usc_id,omitempty"`
	EnterpriseTitle               string `protobuf:"bytes,2,opt,name=enterprise_title,json=enterpriseTitle,proto3" json:"enterprise_title,omitempty"`
	EnterpriseTitleEn             string `protobuf:"bytes,3,opt,name=enterprise_title_en,json=enterpriseTitleEn,proto3" json:"enterprise_title_en,omitempty"`
	BusinessRegistrationNumber    string `protobuf:"bytes,4,opt,name=business_registration_number,json=businessRegistrationNumber,proto3" json:"business_registration_number,omitempty"`
	EstablishDate                 string `protobuf:"bytes,5,opt,name=establish_date,json=establishDate,proto3" json:"establish_date,omitempty"`
	Region                        string `protobuf:"bytes,6,opt,name=region,proto3" json:"region,omitempty"`
	ApprovedDate                  string `protobuf:"bytes,7,opt,name=approved_date,json=approvedDate,proto3" json:"approved_date,omitempty"`
	RegisteredAddress             string `protobuf:"bytes,8,opt,name=registered_address,json=registeredAddress,proto3" json:"registered_address,omitempty"`
	RegisteredCapital             string `protobuf:"bytes,9,opt,name=registered_capital,json=registeredCapital,proto3" json:"registered_capital,omitempty"`
	PaidInCapital                 string `protobuf:"bytes,10,opt,name=paid_in_capital,json=paidInCapital,proto3" json:"paid_in_capital,omitempty"`
	EnterpriseType                string `protobuf:"bytes,11,opt,name=enterprise_type,json=enterpriseType,proto3" json:"enterprise_type,omitempty"`
	StuffSize                     string `protobuf:"bytes,12,opt,name=stuff_size,json=stuffSize,proto3" json:"stuff_size,omitempty"`
	StuffInsuredNumber            int32  `protobuf:"varint,13,opt,name=stuff_insured_number,json=stuffInsuredNumber,proto3" json:"stuff_insured_number,omitempty"`
	BusinessScope                 string `protobuf:"bytes,14,opt,name=business_scope,json=businessScope,proto3" json:"business_scope,omitempty"`
	ImportExportQualificationCode string `protobuf:"bytes,15,opt,name=import_export_qualification_code,json=importExportQualificationCode,proto3" json:"import_export_qualification_code,omitempty"`
	LegalRepresentative           string `protobuf:"bytes,16,opt,name=legal_representative,json=legalRepresentative,proto3" json:"legal_representative,omitempty"`
	RegistrationAuthority         string `protobuf:"bytes,17,opt,name=registration_authority,json=registrationAuthority,proto3" json:"registration_authority,omitempty"`
	RegistrationStatus            string `protobuf:"bytes,18,opt,name=registration_status,json=registrationStatus,proto3" json:"registration_status,omitempty"`
	TaxpayerQualification         string `protobuf:"bytes,19,opt,name=taxpayer_qualification,json=taxpayerQualification,proto3" json:"taxpayer_qualification,omitempty"`
	OrganizationCode              string `protobuf:"bytes,20,opt,name=organization_code,json=organizationCode,proto3" json:"organization_code,omitempty"`
	UrlQcc                        string `protobuf:"bytes,21,opt,name=url_qcc,json=urlQcc,proto3" json:"url_qcc,omitempty"`
	UrlHomepage                   string `protobuf:"bytes,22,opt,name=url_homepage,json=urlHomepage,proto3" json:"url_homepage,omitempty"`
	BusinessTermStart             string `protobuf:"bytes,23,opt,name=business_term_start,json=businessTermStart,proto3" json:"business_term_start,omitempty"`
	BusinessTermEnd               string `protobuf:"bytes,24,opt,name=business_term_end,json=businessTermEnd,proto3" json:"business_term_end,omitempty"`
	Id                            int64  `protobuf:"varint,25,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt                     string `protobuf:"bytes,26,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt                     string `protobuf:"bytes,27,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *EntInfoResp) Reset() {
	*x = EntInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dw_v2_dw_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntInfoResp) ProtoMessage() {}

func (x *EntInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_dw_v2_dw_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntInfoResp.ProtoReflect.Descriptor instead.
func (*EntInfoResp) Descriptor() ([]byte, []int) {
	return file_api_dw_v2_dw_proto_rawDescGZIP(), []int{3}
}

func (x *EntInfoResp) GetUscId() string {
	if x != nil {
		return x.UscId
	}
	return ""
}

func (x *EntInfoResp) GetEnterpriseTitle() string {
	if x != nil {
		return x.EnterpriseTitle
	}
	return ""
}

func (x *EntInfoResp) GetEnterpriseTitleEn() string {
	if x != nil {
		return x.EnterpriseTitleEn
	}
	return ""
}

func (x *EntInfoResp) GetBusinessRegistrationNumber() string {
	if x != nil {
		return x.BusinessRegistrationNumber
	}
	return ""
}

func (x *EntInfoResp) GetEstablishDate() string {
	if x != nil {
		return x.EstablishDate
	}
	return ""
}

func (x *EntInfoResp) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *EntInfoResp) GetApprovedDate() string {
	if x != nil {
		return x.ApprovedDate
	}
	return ""
}

func (x *EntInfoResp) GetRegisteredAddress() string {
	if x != nil {
		return x.RegisteredAddress
	}
	return ""
}

func (x *EntInfoResp) GetRegisteredCapital() string {
	if x != nil {
		return x.RegisteredCapital
	}
	return ""
}

func (x *EntInfoResp) GetPaidInCapital() string {
	if x != nil {
		return x.PaidInCapital
	}
	return ""
}

func (x *EntInfoResp) GetEnterpriseType() string {
	if x != nil {
		return x.EnterpriseType
	}
	return ""
}

func (x *EntInfoResp) GetStuffSize() string {
	if x != nil {
		return x.StuffSize
	}
	return ""
}

func (x *EntInfoResp) GetStuffInsuredNumber() int32 {
	if x != nil {
		return x.StuffInsuredNumber
	}
	return 0
}

func (x *EntInfoResp) GetBusinessScope() string {
	if x != nil {
		return x.BusinessScope
	}
	return ""
}

func (x *EntInfoResp) GetImportExportQualificationCode() string {
	if x != nil {
		return x.ImportExportQualificationCode
	}
	return ""
}

func (x *EntInfoResp) GetLegalRepresentative() string {
	if x != nil {
		return x.LegalRepresentative
	}
	return ""
}

func (x *EntInfoResp) GetRegistrationAuthority() string {
	if x != nil {
		return x.RegistrationAuthority
	}
	return ""
}

func (x *EntInfoResp) GetRegistrationStatus() string {
	if x != nil {
		return x.RegistrationStatus
	}
	return ""
}

func (x *EntInfoResp) GetTaxpayerQualification() string {
	if x != nil {
		return x.TaxpayerQualification
	}
	return ""
}

func (x *EntInfoResp) GetOrganizationCode() string {
	if x != nil {
		return x.OrganizationCode
	}
	return ""
}

func (x *EntInfoResp) GetUrlQcc() string {
	if x != nil {
		return x.UrlQcc
	}
	return ""
}

func (x *EntInfoResp) GetUrlHomepage() string {
	if x != nil {
		return x.UrlHomepage
	}
	return ""
}

func (x *EntInfoResp) GetBusinessTermStart() string {
	if x != nil {
		return x.BusinessTermStart
	}
	return ""
}

func (x *EntInfoResp) GetBusinessTermEnd() string {
	if x != nil {
		return x.BusinessTermEnd
	}
	return ""
}

func (x *EntInfoResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EntInfoResp) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *EntInfoResp) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type EntCredential struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                     int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UscId                  string `protobuf:"bytes,2,opt,name=usc_id,json=uscId,proto3" json:"usc_id,omitempty"`
	CertificationTitle     string `protobuf:"bytes,3,opt,name=certification_title,json=certificationTitle,proto3" json:"certification_title,omitempty"`
	CertificationCode      string `protobuf:"bytes,4,opt,name=certification_code,json=certificationCode,proto3" json:"certification_code,omitempty"`
	CertificationLevel     string `protobuf:"bytes,5,opt,name=certification_level,json=certificationLevel,proto3" json:"certification_level,omitempty"`
	CertificationType      string `protobuf:"bytes,6,opt,name=certification_type,json=certificationType,proto3" json:"certification_type,omitempty"`
	CertificationSource    string `protobuf:"bytes,7,opt,name=certification_source,json=certificationSource,proto3" json:"certification_source,omitempty"`
	CertificationDate      string `protobuf:"bytes,8,opt,name=certification_date,json=certificationDate,proto3" json:"certification_date,omitempty"`
	CertificationTermStart string `protobuf:"bytes,9,opt,name=certification_term_start,json=certificationTermStart,proto3" json:"certification_term_start,omitempty"`
	CertificationTermEnd   string `protobuf:"bytes,10,opt,name=certification_term_end,json=certificationTermEnd,proto3" json:"certification_term_end,omitempty"`
	CertificationAuthority string `protobuf:"bytes,11,opt,name=certification_authority,json=certificationAuthority,proto3" json:"certification_authority,omitempty"`
	CreatedAt              string `protobuf:"bytes,12,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt              string `protobuf:"bytes,13,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *EntCredential) Reset() {
	*x = EntCredential{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dw_v2_dw_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntCredential) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntCredential) ProtoMessage() {}

func (x *EntCredential) ProtoReflect() protoreflect.Message {
	mi := &file_api_dw_v2_dw_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntCredential.ProtoReflect.Descriptor instead.
func (*EntCredential) Descriptor() ([]byte, []int) {
	return file_api_dw_v2_dw_proto_rawDescGZIP(), []int{4}
}

func (x *EntCredential) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EntCredential) GetUscId() string {
	if x != nil {
		return x.UscId
	}
	return ""
}

func (x *EntCredential) GetCertificationTitle() string {
	if x != nil {
		return x.CertificationTitle
	}
	return ""
}

func (x *EntCredential) GetCertificationCode() string {
	if x != nil {
		return x.CertificationCode
	}
	return ""
}

func (x *EntCredential) GetCertificationLevel() string {
	if x != nil {
		return x.CertificationLevel
	}
	return ""
}

func (x *EntCredential) GetCertificationType() string {
	if x != nil {
		return x.CertificationType
	}
	return ""
}

func (x *EntCredential) GetCertificationSource() string {
	if x != nil {
		return x.CertificationSource
	}
	return ""
}

func (x *EntCredential) GetCertificationDate() string {
	if x != nil {
		return x.CertificationDate
	}
	return ""
}

func (x *EntCredential) GetCertificationTermStart() string {
	if x != nil {
		return x.CertificationTermStart
	}
	return ""
}

func (x *EntCredential) GetCertificationTermEnd() string {
	if x != nil {
		return x.CertificationTermEnd
	}
	return ""
}

func (x *EntCredential) GetCertificationAuthority() string {
	if x != nil {
		return x.CertificationAuthority
	}
	return ""
}

func (x *EntCredential) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *EntCredential) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type EntCredentialResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*EntCredential `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *EntCredentialResp) Reset() {
	*x = EntCredentialResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dw_v2_dw_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntCredentialResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntCredentialResp) ProtoMessage() {}

func (x *EntCredentialResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_dw_v2_dw_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntCredentialResp.ProtoReflect.Descriptor instead.
func (*EntCredentialResp) Descriptor() ([]byte, []int) {
	return file_api_dw_v2_dw_proto_rawDescGZIP(), []int{5}
}

func (x *EntCredentialResp) GetData() []*EntCredential {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetEntInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UscId string `protobuf:"bytes,1,opt,name=usc_id,json=uscId,proto3" json:"usc_id,omitempty"`
}

func (x *GetEntInfoReq) Reset() {
	*x = GetEntInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dw_v2_dw_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEntInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEntInfoReq) ProtoMessage() {}

func (x *GetEntInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_dw_v2_dw_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEntInfoReq.ProtoReflect.Descriptor instead.
func (*GetEntInfoReq) Descriptor() ([]byte, []int) {
	return file_api_dw_v2_dw_proto_rawDescGZIP(), []int{6}
}

func (x *GetEntInfoReq) GetUscId() string {
	if x != nil {
		return x.UscId
	}
	return ""
}

type EntStrArrayResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []string `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *EntStrArrayResp) Reset() {
	*x = EntStrArrayResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dw_v2_dw_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntStrArrayResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntStrArrayResp) ProtoMessage() {}

func (x *EntStrArrayResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_dw_v2_dw_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntStrArrayResp.ProtoReflect.Descriptor instead.
func (*EntStrArrayResp) Descriptor() ([]byte, []int) {
	return file_api_dw_v2_dw_proto_rawDescGZIP(), []int{7}
}

func (x *EntStrArrayResp) GetData() []string {
	if x != nil {
		return x.Data
	}
	return nil
}

type EntRankingListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*EnterpriseRankingList `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *EntRankingListResp) Reset() {
	*x = EntRankingListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dw_v2_dw_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntRankingListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntRankingListResp) ProtoMessage() {}

func (x *EntRankingListResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_dw_v2_dw_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntRankingListResp.ProtoReflect.Descriptor instead.
func (*EntRankingListResp) Descriptor() ([]byte, []int) {
	return file_api_dw_v2_dw_proto_rawDescGZIP(), []int{8}
}

func (x *EntRankingListResp) GetData() []*EnterpriseRankingList {
	if x != nil {
		return x.Data
	}
	return nil
}

type EnterpriseRankingList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UscId                 string `protobuf:"bytes,1,opt,name=usc_id,json=uscId,proto3" json:"usc_id,omitempty"`
	RankingPosition       int32  `protobuf:"varint,2,opt,name=ranking_position,json=rankingPosition,proto3" json:"ranking_position,omitempty"`
	ListTitle             string `protobuf:"bytes,3,opt,name=list_title,json=listTitle,proto3" json:"list_title,omitempty"`
	ListType              string `protobuf:"bytes,4,opt,name=list_type,json=listType,proto3" json:"list_type,omitempty"`
	ListSource            string `protobuf:"bytes,5,opt,name=list_source,json=listSource,proto3" json:"list_source,omitempty"`
	ListParticipantsTotal int32  `protobuf:"varint,6,opt,name=list_participants_total,json=listParticipantsTotal,proto3" json:"list_participants_total,omitempty"`
	ListPublishedDate     string `protobuf:"bytes,7,opt,name=list_published_date,json=listPublishedDate,proto3" json:"list_published_date,omitempty"`
	ListUrlQcc            string `protobuf:"bytes,8,opt,name=list_url_qcc,json=listUrlQcc,proto3" json:"list_url_qcc,omitempty"`
	ListUrlOrigin         string `protobuf:"bytes,9,opt,name=list_url_origin,json=listUrlOrigin,proto3" json:"list_url_origin,omitempty"`
}

func (x *EnterpriseRankingList) Reset() {
	*x = EnterpriseRankingList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dw_v2_dw_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnterpriseRankingList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterpriseRankingList) ProtoMessage() {}

func (x *EnterpriseRankingList) ProtoReflect() protoreflect.Message {
	mi := &file_api_dw_v2_dw_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterpriseRankingList.ProtoReflect.Descriptor instead.
func (*EnterpriseRankingList) Descriptor() ([]byte, []int) {
	return file_api_dw_v2_dw_proto_rawDescGZIP(), []int{9}
}

func (x *EnterpriseRankingList) GetUscId() string {
	if x != nil {
		return x.UscId
	}
	return ""
}

func (x *EnterpriseRankingList) GetRankingPosition() int32 {
	if x != nil {
		return x.RankingPosition
	}
	return 0
}

func (x *EnterpriseRankingList) GetListTitle() string {
	if x != nil {
		return x.ListTitle
	}
	return ""
}

func (x *EnterpriseRankingList) GetListType() string {
	if x != nil {
		return x.ListType
	}
	return ""
}

func (x *EnterpriseRankingList) GetListSource() string {
	if x != nil {
		return x.ListSource
	}
	return ""
}

func (x *EnterpriseRankingList) GetListParticipantsTotal() int32 {
	if x != nil {
		return x.ListParticipantsTotal
	}
	return 0
}

func (x *EnterpriseRankingList) GetListPublishedDate() string {
	if x != nil {
		return x.ListPublishedDate
	}
	return ""
}

func (x *EnterpriseRankingList) GetListUrlQcc() string {
	if x != nil {
		return x.ListUrlQcc
	}
	return ""
}

func (x *EnterpriseRankingList) GetListUrlOrigin() string {
	if x != nil {
		return x.ListUrlOrigin
	}
	return ""
}

var File_api_dw_v2_dw_proto protoreflect.FileDescriptor

var file_api_dw_v2_dw_proto_rawDesc = []byte{
	0x0a, 0x12, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x77, 0x2f, 0x76, 0x32, 0x2f, 0x64, 0x77, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x77, 0x2e, 0x76, 0x32, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7c, 0x0a,
	0x16, 0x45, 0x71, 0x75, 0x69, 0x74, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x63, 0x6c,
	0x75, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e,
	0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x15, 0x0a, 0x06, 0x75, 0x73, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x73, 0x63, 0x49, 0x64, 0x22, 0x39, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x45, 0x6e, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x27, 0x0a,
	0x0f, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69,
	0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x25, 0x0a, 0x0c, 0x45, 0x6e, 0x74, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x15, 0x0a, 0x06, 0x75, 0x73, 0x63, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x73, 0x63, 0x49, 0x64, 0x22, 0xfa, 0x08,
	0x0a, 0x0b, 0x45, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x15, 0x0a,
	0x06, 0x75, 0x73, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75,
	0x73, 0x63, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69,
	0x73, 0x65, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x2e, 0x0a, 0x13, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x5f, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x5f, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x45, 0x6e, 0x12,
	0x40, 0x0a, 0x1c, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x73, 0x74, 0x61, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x12, 0x23, 0x0a, 0x0d, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x65, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x65, 0x64, 0x5f, 0x63, 0x61, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x43, 0x61, 0x70, 0x69,
	0x74, 0x61, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x61, 0x69, 0x64, 0x5f, 0x69, 0x6e, 0x5f, 0x63,
	0x61, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61,
	0x69, 0x64, 0x49, 0x6e, 0x43, 0x61, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x12, 0x27, 0x0a, 0x0f, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x75, 0x66, 0x66, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x75, 0x66, 0x66, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x74, 0x75, 0x66, 0x66, 0x5f, 0x69, 0x6e, 0x73,
	0x75, 0x72, 0x65, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x12, 0x73, 0x74, 0x75, 0x66, 0x66, 0x49, 0x6e, 0x73, 0x75, 0x72, 0x65, 0x64, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x47, 0x0a, 0x20,
	0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x71, 0x75,
	0x61, 0x6c, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1d, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x78,
	0x70, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x31, 0x0a, 0x14, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x5f, 0x72,
	0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x76, 0x65, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x13, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73,
	0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x76, 0x65, 0x12, 0x35, 0x0a, 0x16, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12,
	0x2f, 0x0a, 0x13, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x35, 0x0a, 0x16, 0x74, 0x61, 0x78, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x71, 0x75, 0x61,
	0x6c, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x15, 0x74, 0x61, 0x78, 0x70, 0x61, 0x79, 0x65, 0x72, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x11, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x72, 0x6c, 0x5f, 0x71, 0x63, 0x63, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x72, 0x6c, 0x51, 0x63, 0x63, 0x12, 0x21, 0x0a,
	0x0c, 0x75, 0x72, 0x6c, 0x5f, 0x68, 0x6f, 0x6d, 0x65, 0x70, 0x61, 0x67, 0x65, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x72, 0x6c, 0x48, 0x6f, 0x6d, 0x65, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x2e, 0x0a, 0x13, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x65, 0x72,
	0x6d, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x65, 0x72, 0x6d, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x12, 0x2a, 0x0a, 0x11, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x65, 0x72,
	0x6d, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x65, 0x72, 0x6d, 0x45, 0x6e, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x19, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xbf, 0x04, 0x0a, 0x0d, 0x45,
	0x6e, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06,
	0x75, 0x73, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x73,
	0x63, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x13, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x2f, 0x0a, 0x13, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x31, 0x0a, 0x14, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x18, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x72, 0x6d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12,
	0x34, 0x0a, 0x16, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x74, 0x65, 0x72, 0x6d, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x14, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65,
	0x72, 0x6d, 0x45, 0x6e, 0x64, 0x12, 0x37, 0x0a, 0x17, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x41, 0x0a, 0x11,
	0x45, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x77, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x6e, 0x74, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x26, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x12, 0x15, 0x0a, 0x06, 0x75, 0x73, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x75, 0x73, 0x63, 0x49, 0x64, 0x22, 0x25, 0x0a, 0x0f, 0x45, 0x6e, 0x74, 0x53, 0x74,
	0x72, 0x41, 0x72, 0x72, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4a,
	0x0a, 0x12, 0x45, 0x6e, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x77, 0x2e, 0x76, 0x32, 0x2e, 0x45,
	0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xe8, 0x02, 0x0a, 0x15, 0x45,
	0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x75, 0x73, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x73, 0x63, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x72,
	0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x69, 0x73, 0x74,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x69, 0x73, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x36, 0x0a, 0x17, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x6c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2e, 0x0a, 0x13, 0x6c,
	0x69, 0x73, 0x74, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6c, 0x69, 0x73, 0x74, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x6c,
	0x69, 0x73, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x5f, 0x71, 0x63, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x55, 0x72, 0x6c, 0x51, 0x63, 0x63, 0x12, 0x26, 0x0a,
	0x0f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x69, 0x73, 0x74, 0x55, 0x72, 0x6c, 0x4f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x32, 0xc8, 0x04, 0x0a, 0x09, 0x44, 0x77, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x4a, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70,
	0x72, 0x69, 0x73, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x64, 0x77, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x77, 0x2e, 0x76, 0x32,
	0x2e, 0x45, 0x6e, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x47, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x77, 0x2e, 0x76, 0x32,
	0x2e, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x16,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x77, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x45,
	0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x12, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x77, 0x2e, 0x76, 0x32, 0x2e,
	0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x64, 0x77, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x6e, 0x74, 0x43, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x55, 0x0a,
	0x18, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x52, 0x61,
	0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x64, 0x77, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x77, 0x2e, 0x76, 0x32, 0x2e,
	0x45, 0x6e, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x65, 0x72,
	0x70, 0x72, 0x69, 0x73, 0x65, 0x49, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x12, 0x18, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x64, 0x77, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x77,
	0x2e, 0x76, 0x32, 0x2e, 0x45, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x41, 0x72, 0x72, 0x61, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x65,
	0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x18, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x64, 0x77, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x77,
	0x2e, 0x76, 0x32, 0x2e, 0x45, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x41, 0x72, 0x72, 0x61, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x45,
	0x71, 0x75, 0x69, 0x74, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x12, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x77, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65,
	0x74, 0x45, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x64, 0x77, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x71, 0x75, 0x69, 0x74, 0x79, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00,
	0x42, 0x2d, 0x0a, 0x09, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x77, 0x2e, 0x76, 0x32, 0x42, 0x04, 0x44,
	0x77, 0x56, 0x32, 0x50, 0x01, 0x5a, 0x18, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x2d, 0x64, 0x77,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x77, 0x2f, 0x76, 0x32, 0x3b, 0x64, 0x77, 0x56, 0x32, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_dw_v2_dw_proto_rawDescOnce sync.Once
	file_api_dw_v2_dw_proto_rawDescData = file_api_dw_v2_dw_proto_rawDesc
)

func file_api_dw_v2_dw_proto_rawDescGZIP() []byte {
	file_api_dw_v2_dw_proto_rawDescOnce.Do(func() {
		file_api_dw_v2_dw_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_dw_v2_dw_proto_rawDescData)
	})
	return file_api_dw_v2_dw_proto_rawDescData
}

var file_api_dw_v2_dw_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_api_dw_v2_dw_proto_goTypes = []interface{}{
	(*EquityTransparencyResp)(nil), // 0: api.dw.v2.EquityTransparencyResp
	(*GetEntIdentReq)(nil),         // 1: api.dw.v2.GetEntIdentReq
	(*EntIdentResp)(nil),           // 2: api.dw.v2.EntIdentResp
	(*EntInfoResp)(nil),            // 3: api.dw.v2.EntInfoResp
	(*EntCredential)(nil),          // 4: api.dw.v2.EntCredential
	(*EntCredentialResp)(nil),      // 5: api.dw.v2.EntCredentialResp
	(*GetEntInfoReq)(nil),          // 6: api.dw.v2.GetEntInfoReq
	(*EntStrArrayResp)(nil),        // 7: api.dw.v2.EntStrArrayResp
	(*EntRankingListResp)(nil),     // 8: api.dw.v2.EntRankingListResp
	(*EnterpriseRankingList)(nil),  // 9: api.dw.v2.EnterpriseRankingList
	(*structpb.Struct)(nil),        // 10: google.protobuf.Struct
}
var file_api_dw_v2_dw_proto_depIdxs = []int32{
	10, // 0: api.dw.v2.EquityTransparencyResp.data:type_name -> google.protobuf.Struct
	4,  // 1: api.dw.v2.EntCredentialResp.data:type_name -> api.dw.v2.EntCredential
	9,  // 2: api.dw.v2.EntRankingListResp.data:type_name -> api.dw.v2.EnterpriseRankingList
	1,  // 3: api.dw.v2.DwService.GetEnterpriseIdent:input_type -> api.dw.v2.GetEntIdentReq
	6,  // 4: api.dw.v2.DwService.GetEnterpriseInfo:input_type -> api.dw.v2.GetEntInfoReq
	6,  // 5: api.dw.v2.DwService.GetEnterpriseCredential:input_type -> api.dw.v2.GetEntInfoReq
	6,  // 6: api.dw.v2.DwService.GetEnterpriseRankingList:input_type -> api.dw.v2.GetEntInfoReq
	6,  // 7: api.dw.v2.DwService.GetEnterpriseIndustry:input_type -> api.dw.v2.GetEntInfoReq
	6,  // 8: api.dw.v2.DwService.GetEnterpriseProduct:input_type -> api.dw.v2.GetEntInfoReq
	6,  // 9: api.dw.v2.DwService.GetEntEquityTransparency:input_type -> api.dw.v2.GetEntInfoReq
	2,  // 10: api.dw.v2.DwService.GetEnterpriseIdent:output_type -> api.dw.v2.EntIdentResp
	3,  // 11: api.dw.v2.DwService.GetEnterpriseInfo:output_type -> api.dw.v2.EntInfoResp
	5,  // 12: api.dw.v2.DwService.GetEnterpriseCredential:output_type -> api.dw.v2.EntCredentialResp
	8,  // 13: api.dw.v2.DwService.GetEnterpriseRankingList:output_type -> api.dw.v2.EntRankingListResp
	7,  // 14: api.dw.v2.DwService.GetEnterpriseIndustry:output_type -> api.dw.v2.EntStrArrayResp
	7,  // 15: api.dw.v2.DwService.GetEnterpriseProduct:output_type -> api.dw.v2.EntStrArrayResp
	0,  // 16: api.dw.v2.DwService.GetEntEquityTransparency:output_type -> api.dw.v2.EquityTransparencyResp
	10, // [10:17] is the sub-list for method output_type
	3,  // [3:10] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_api_dw_v2_dw_proto_init() }
func file_api_dw_v2_dw_proto_init() {
	if File_api_dw_v2_dw_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_dw_v2_dw_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EquityTransparencyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_dw_v2_dw_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEntIdentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_dw_v2_dw_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntIdentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_dw_v2_dw_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_dw_v2_dw_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntCredential); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_dw_v2_dw_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntCredentialResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_dw_v2_dw_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEntInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_dw_v2_dw_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntStrArrayResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_dw_v2_dw_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntRankingListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_dw_v2_dw_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnterpriseRankingList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_dw_v2_dw_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_dw_v2_dw_proto_goTypes,
		DependencyIndexes: file_api_dw_v2_dw_proto_depIdxs,
		MessageInfos:      file_api_dw_v2_dw_proto_msgTypes,
	}.Build()
	File_api_dw_v2_dw_proto = out.File
	file_api_dw_v2_dw_proto_rawDesc = nil
	file_api_dw_v2_dw_proto_goTypes = nil
	file_api_dw_v2_dw_proto_depIdxs = nil
}
